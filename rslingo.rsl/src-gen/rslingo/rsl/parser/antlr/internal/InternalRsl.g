/*
 * generated by Xtext
 */
grammar InternalRsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package rslingo.rsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package rslingo.rsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import rslingo.rsl.services.RslGrammarAccess;

}

@parser::members {

 	private RslGrammarAccess grammarAccess;
 	
    public InternalRslParser(TokenStream input, RslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected RslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getPackagesPackageAbstractParserRuleCall_0()); 
	    }
		lv_packages_0_0=rulePackageAbstract		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"packages",
        		lv_packages_0_0, 
        		"PackageAbstract");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRulePackageAbstract
entryRulePackageAbstract returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageAbstractRule()); }
	 iv_rulePackageAbstract=rulePackageAbstract 
	 { $current=$iv_rulePackageAbstract.current; } 
	 EOF 
;

// Rule PackageAbstract
rulePackageAbstract returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPackageAbstractAccess().getPackageProjectParserRuleCall_0()); 
    }
    this_PackageProject_0=rulePackageProject
    { 
        $current = $this_PackageProject_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPackageAbstractAccess().getPackageSystemParserRuleCall_1()); 
    }
    this_PackageSystem_1=rulePackageSystem
    { 
        $current = $this_PackageSystem_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPackageAbstractAccess().getPackageGlossaryParserRuleCall_2()); 
    }
    this_PackageGlossary_2=rulePackageGlossary
    { 
        $current = $this_PackageGlossary_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPackageAbstractAccess().getPackageStakeholderParserRuleCall_3()); 
    }
    this_PackageStakeholder_3=rulePackageStakeholder
    { 
        $current = $this_PackageStakeholder_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard 
	 { $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
    }
)?)
    ;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"QualifiedNameWithWildcard");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDate
entryRuleDate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDateRule()); }
	 iv_ruleDate=ruleDate 
	 { $current=$iv_ruleDate.current; } 
	 EOF 
;

// Rule Date
ruleDate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_day_0_0=RULE_INT
		{
			newLeafNode(lv_day_0_0, grammarAccess.getDateAccess().getDayINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"day",
        		lv_day_0_0, 
        		"INT");
	    }

)
)	otherlv_1='-' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDateAccess().getHyphenMinusKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDateAccess().getMonthMonthParserRuleCall_2_0()); 
	    }
		lv_month_2_0=ruleMonth		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDateRule());
	        }
       		set(
       			$current, 
       			"month",
        		lv_month_2_0, 
        		"Month");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='-' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDateAccess().getHyphenMinusKeyword_3());
    }
(
(
		lv_year_4_0=RULE_INT
		{
			newLeafNode(lv_year_4_0, grammarAccess.getDateAccess().getYearINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"year",
        		lv_year_4_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleMonth
entryRuleMonth returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMonthRule()); }
	 iv_ruleMonth=ruleMonth 
	 { $current=$iv_ruleMonth.current; } 
	 EOF 
;

// Rule Month
ruleMonth returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_name_0_1=	'Jan' 
    {
        newLeafNode(lv_name_0_1, grammarAccess.getMonthAccess().getNameJanKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonthRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_1, null);
	    }

    |		lv_name_0_2=	'Feb' 
    {
        newLeafNode(lv_name_0_2, grammarAccess.getMonthAccess().getNameFebKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonthRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_2, null);
	    }

    |		lv_name_0_3=	'Mar' 
    {
        newLeafNode(lv_name_0_3, grammarAccess.getMonthAccess().getNameMarKeyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonthRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_3, null);
	    }

    |		lv_name_0_4=	'Apr' 
    {
        newLeafNode(lv_name_0_4, grammarAccess.getMonthAccess().getNameAprKeyword_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonthRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_4, null);
	    }

    |		lv_name_0_5=	'May' 
    {
        newLeafNode(lv_name_0_5, grammarAccess.getMonthAccess().getNameMayKeyword_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonthRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_5, null);
	    }

    |		lv_name_0_6=	'Jun' 
    {
        newLeafNode(lv_name_0_6, grammarAccess.getMonthAccess().getNameJunKeyword_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonthRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_6, null);
	    }

    |		lv_name_0_7=	'Jul' 
    {
        newLeafNode(lv_name_0_7, grammarAccess.getMonthAccess().getNameJulKeyword_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonthRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_7, null);
	    }

    |		lv_name_0_8=	'Aug' 
    {
        newLeafNode(lv_name_0_8, grammarAccess.getMonthAccess().getNameAugKeyword_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonthRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_8, null);
	    }

    |		lv_name_0_9=	'Sep' 
    {
        newLeafNode(lv_name_0_9, grammarAccess.getMonthAccess().getNameSepKeyword_0_8());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonthRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_9, null);
	    }

    |		lv_name_0_10=	'Oct' 
    {
        newLeafNode(lv_name_0_10, grammarAccess.getMonthAccess().getNameOctKeyword_0_9());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonthRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_10, null);
	    }

    |		lv_name_0_11=	'Nov' 
    {
        newLeafNode(lv_name_0_11, grammarAccess.getMonthAccess().getNameNovKeyword_0_10());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonthRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_11, null);
	    }

    |		lv_name_0_12=	'Dec' 
    {
        newLeafNode(lv_name_0_12, grammarAccess.getMonthAccess().getNameDecKeyword_0_11());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonthRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_12, null);
	    }

)

)
)
;





// Entry rule entryRuleProgress
entryRuleProgress returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProgressRule()); }
	 iv_ruleProgress=ruleProgress 
	 { $current=$iv_ruleProgress.current; } 
	 EOF 
;

// Rule Progress
ruleProgress returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_value_0_1=	'NotPlan' 
    {
        newLeafNode(lv_value_0_1, grammarAccess.getProgressAccess().getValueNotPlanKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProgressRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_1, null);
	    }

    |		lv_value_0_2=	'Plan' 
    {
        newLeafNode(lv_value_0_2, grammarAccess.getProgressAccess().getValuePlanKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProgressRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_2, null);
	    }

    |		lv_value_0_3=	'OnDesign' 
    {
        newLeafNode(lv_value_0_3, grammarAccess.getProgressAccess().getValueOnDesignKeyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProgressRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_3, null);
	    }

    |		lv_value_0_4=	'OnDevelop' 
    {
        newLeafNode(lv_value_0_4, grammarAccess.getProgressAccess().getValueOnDevelopKeyword_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProgressRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_4, null);
	    }

    |		lv_value_0_5=	'OnTest' 
    {
        newLeafNode(lv_value_0_5, grammarAccess.getProgressAccess().getValueOnTestKeyword_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProgressRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_5, null);
	    }

    |		lv_value_0_6=	'OnDeploy' 
    {
        newLeafNode(lv_value_0_6, grammarAccess.getProgressAccess().getValueOnDeployKeyword_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProgressRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_6, null);
	    }

    |		lv_value_0_7=	'Concluded' 
    {
        newLeafNode(lv_value_0_7, grammarAccess.getProgressAccess().getValueConcludedKeyword_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProgressRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_7, null);
	    }

)

)
)
;





// Entry rule entryRulePriority
entryRulePriority returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPriorityRule()); }
	 iv_rulePriority=rulePriority 
	 { $current=$iv_rulePriority.current; } 
	 EOF 
;

// Rule Priority
rulePriority returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_value_0_1=	'Must' 
    {
        newLeafNode(lv_value_0_1, grammarAccess.getPriorityAccess().getValueMustKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPriorityRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_1, null);
	    }

    |		lv_value_0_2=	'Should' 
    {
        newLeafNode(lv_value_0_2, grammarAccess.getPriorityAccess().getValueShouldKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPriorityRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_2, null);
	    }

    |		lv_value_0_3=	'Could' 
    {
        newLeafNode(lv_value_0_3, grammarAccess.getPriorityAccess().getValueCouldKeyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPriorityRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_3, null);
	    }

    |		lv_value_0_4=	'Won\'t' 
    {
        newLeafNode(lv_value_0_4, grammarAccess.getPriorityAccess().getValueWonTKeyword_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPriorityRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_4, null);
	    }

)

)
)
;





// Entry rule entryRulePackageProject
entryRulePackageProject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageProjectRule()); }
	 iv_rulePackageProject=rulePackageProject 
	 { $current=$iv_rulePackageProject.current; } 
	 EOF 
;

// Rule PackageProject
rulePackageProject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package-project' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPackageProjectAccess().getPackageProjectKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageProjectAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageProjectRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageProjectAccess().getImportsImportParserRuleCall_2_0()); 
	    }
		lv_imports_2_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageProjectRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_2_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageProjectAccess().getProjectProjectParserRuleCall_3_0()); 
	    }
		lv_project_3_0=ruleProject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageProjectRule());
	        }
       		set(
       			$current, 
       			"project",
        		lv_project_3_0, 
        		"Project");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageProjectAccess().getPackageGlossariesPackageGlossaryParserRuleCall_4_0()); 
	    }
		lv_packageGlossaries_4_0=rulePackageGlossary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageProjectRule());
	        }
       		add(
       			$current, 
       			"packageGlossaries",
        		lv_packageGlossaries_4_0, 
        		"PackageGlossary");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageProjectAccess().getPackageStakeholdersPackageStakeholderParserRuleCall_5_0()); 
	    }
		lv_packageStakeholders_5_0=rulePackageStakeholder		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageProjectRule());
	        }
       		add(
       			$current, 
       			"packageStakeholders",
        		lv_packageStakeholders_5_0, 
        		"PackageStakeholder");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageProjectAccess().getPackageSystemsPackageSystemParserRuleCall_6_0()); 
	    }
		lv_packageSystems_6_0=rulePackageSystem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageProjectRule());
	        }
       		add(
       			$current, 
       			"packageSystems",
        		lv_packageSystems_6_0, 
        		"PackageSystem");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageProjectAccess().getSystemRelationsSystemRelationParserRuleCall_7_0()); 
	    }
		lv_systemRelations_7_0=ruleSystemRelation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageProjectRule());
	        }
       		add(
       			$current, 
       			"systemRelations",
        		lv_systemRelations_7_0, 
        		"SystemRelation");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRulePackageGlossary
entryRulePackageGlossary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageGlossaryRule()); }
	 iv_rulePackageGlossary=rulePackageGlossary 
	 { $current=$iv_rulePackageGlossary.current; } 
	 EOF 
;

// Rule PackageGlossary
rulePackageGlossary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package-glossary' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPackageGlossaryAccess().getPackageGlossaryKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageGlossaryAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageGlossaryRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageGlossaryAccess().getImportsImportParserRuleCall_2_0()); 
	    }
		lv_imports_2_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageGlossaryRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_2_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageGlossaryAccess().getGlossaryTermsGlossaryTermParserRuleCall_3_0()); 
	    }
		lv_glossaryTerms_3_0=ruleGlossaryTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageGlossaryRule());
	        }
       		add(
       			$current, 
       			"glossaryTerms",
        		lv_glossaryTerms_3_0, 
        		"GlossaryTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRulePackageStakeholder
entryRulePackageStakeholder returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageStakeholderRule()); }
	 iv_rulePackageStakeholder=rulePackageStakeholder 
	 { $current=$iv_rulePackageStakeholder.current; } 
	 EOF 
;

// Rule PackageStakeholder
rulePackageStakeholder returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package-stakeholders' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPackageStakeholderAccess().getPackageStakeholdersKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageStakeholderAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageStakeholderRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageStakeholderAccess().getImportsImportParserRuleCall_2_0()); 
	    }
		lv_imports_2_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageStakeholderRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_2_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageStakeholderAccess().getStakeholdersStakeholderParserRuleCall_3_0()); 
	    }
		lv_stakeholders_3_0=ruleStakeholder		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageStakeholderRule());
	        }
       		add(
       			$current, 
       			"stakeholders",
        		lv_stakeholders_3_0, 
        		"Stakeholder");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRulePackageSystem
entryRulePackageSystem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageSystemRule()); }
	 iv_rulePackageSystem=rulePackageSystem 
	 { $current=$iv_rulePackageSystem.current; } 
	 EOF 
;

// Rule PackageSystem
rulePackageSystem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package-system' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPackageSystemAccess().getPackageSystemKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageSystemAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageSystemRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageSystemAccess().getImportsImportParserRuleCall_2_0()); 
	    }
		lv_imports_2_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageSystemRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_2_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageSystemAccess().getSystemSystemParserRuleCall_3_0()); 
	    }
		lv_system_3_0=ruleSystem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageSystemRule());
	        }
       		set(
       			$current, 
       			"system",
        		lv_system_3_0, 
        		"System");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageSystemAccess().getEntitiesEntityParserRuleCall_4_0()); 
	    }
		lv_entities_4_0=ruleEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageSystemRule());
	        }
       		add(
       			$current, 
       			"entities",
        		lv_entities_4_0, 
        		"Entity");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageSystemAccess().getBusinessEntitiesBusinessEntityParserRuleCall_5_0()); 
	    }
		lv_businessEntities_5_0=ruleBusinessEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageSystemRule());
	        }
       		add(
       			$current, 
       			"businessEntities",
        		lv_businessEntities_5_0, 
        		"BusinessEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageSystemAccess().getActorsActorParserRuleCall_6_0()); 
	    }
		lv_actors_6_0=ruleActor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageSystemRule());
	        }
       		add(
       			$current, 
       			"actors",
        		lv_actors_6_0, 
        		"Actor");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageSystemAccess().getRequirementsRequirementParserRuleCall_7_0()); 
	    }
		lv_requirements_7_0=ruleRequirement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageSystemRule());
	        }
       		add(
       			$current, 
       			"requirements",
        		lv_requirements_7_0, 
        		"Requirement");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageSystemAccess().getStateMachineStateMachineParserRuleCall_8_0()); 
	    }
		lv_stateMachine_8_0=ruleStateMachine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageSystemRule());
	        }
       		add(
       			$current, 
       			"stateMachine",
        		lv_stateMachine_8_0, 
        		"StateMachine");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageSystemAccess().getRequirementRelationsRequirementRelationParserRuleCall_9_0()); 
	    }
		lv_requirementRelations_9_0=ruleRequirementRelation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageSystemRule());
	        }
       		add(
       			$current, 
       			"requirementRelations",
        		lv_requirementRelations_9_0, 
        		"RequirementRelation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageSystemAccess().getSystemRelationsSystemRelationParserRuleCall_10_0()); 
	    }
		lv_systemRelations_10_0=ruleSystemRelation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageSystemRule());
	        }
       		add(
       			$current, 
       			"systemRelations",
        		lv_systemRelations_10_0, 
        		"SystemRelation");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleProject
entryRuleProject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProjectRule()); }
	 iv_ruleProject=ruleProject 
	 { $current=$iv_ruleProject.current; } 
	 EOF 
;

// Rule Project
ruleProject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='project' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProjectAccess().getProjectKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getProjectAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProjectAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProjectAccess().getTypeProjectTypeEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleProjectType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProjectRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"ProjectType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProjectAccess().getLeftCurlyBracketKeyword_4());
    }
(	otherlv_5='name' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getProjectAccess().getNameKeyword_5_0());
    }
(
(
		lv_nameAlias_6_0=RULE_STRING
		{
			newLeafNode(lv_nameAlias_6_0, grammarAccess.getProjectAccess().getNameAliasSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameAlias",
        		lv_nameAlias_6_0, 
        		"STRING");
	    }

)
))(	otherlv_7='domain' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getProjectAccess().getDomainKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProjectAccess().getDomainProjectDomainEnumRuleCall_6_1_0()); 
	    }
		lv_domain_8_0=ruleProjectDomain		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProjectRule());
	        }
       		set(
       			$current, 
       			"domain",
        		lv_domain_8_0, 
        		"ProjectDomain");
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getProjectAccess().getPlannedPlannedScheduleParserRuleCall_7_0()); 
	    }
		lv_planned_9_0=rulePlannedSchedule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProjectRule());
	        }
       		set(
       			$current, 
       			"planned",
        		lv_planned_9_0, 
        		"PlannedSchedule");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getProjectAccess().getActualActualScheduleParserRuleCall_8_0()); 
	    }
		lv_actual_10_0=ruleActualSchedule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProjectRule());
	        }
       		set(
       			$current, 
       			"actual",
        		lv_actual_10_0, 
        		"ActualSchedule");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getProjectAccess().getOrganizationsOrganizationsParserRuleCall_9_0()); 
	    }
		lv_organizations_11_0=ruleOrganizations		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProjectRule());
	        }
       		set(
       			$current, 
       			"organizations",
        		lv_organizations_11_0, 
        		"Organizations");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_12='progress' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getProjectAccess().getProgressKeyword_10_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProjectAccess().getProgressProgressParserRuleCall_10_1_0()); 
	    }
		lv_progress_13_0=ruleProgress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProjectRule());
	        }
       		set(
       			$current, 
       			"progress",
        		lv_progress_13_0, 
        		"Progress");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_14='summary' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getProjectAccess().getSummaryKeyword_11_0());
    }
(
(
		lv_summary_15_0=RULE_STRING
		{
			newLeafNode(lv_summary_15_0, grammarAccess.getProjectAccess().getSummarySTRINGTerminalRuleCall_11_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"summary",
        		lv_summary_15_0, 
        		"STRING");
	    }

)
))?(	otherlv_16='description' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getProjectAccess().getDescriptionKeyword_12_0());
    }
(
(
		lv_description_17_0=RULE_STRING
		{
			newLeafNode(lv_description_17_0, grammarAccess.getProjectAccess().getDescriptionSTRINGTerminalRuleCall_12_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_17_0, 
        		"STRING");
	    }

)
))?	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getProjectAccess().getRightCurlyBracketKeyword_13());
    }
)
;





// Entry rule entryRulePlannedSchedule
entryRulePlannedSchedule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPlannedScheduleRule()); }
	 iv_rulePlannedSchedule=rulePlannedSchedule 
	 { $current=$iv_rulePlannedSchedule.current; } 
	 EOF 
;

// Rule PlannedSchedule
rulePlannedSchedule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='plannedSchedule' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPlannedScheduleAccess().getPlannedScheduleKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPlannedScheduleAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='start' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPlannedScheduleAccess().getStartKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPlannedScheduleAccess().getStartDateParserRuleCall_3_0()); 
	    }
		lv_start_3_0=ruleDate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPlannedScheduleRule());
	        }
       		set(
       			$current, 
       			"start",
        		lv_start_3_0, 
        		"Date");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='end' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPlannedScheduleAccess().getEndKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPlannedScheduleAccess().getEndDateParserRuleCall_5_0()); 
	    }
		lv_end_5_0=ruleDate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPlannedScheduleRule());
	        }
       		set(
       			$current, 
       			"end",
        		lv_end_5_0, 
        		"Date");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPlannedScheduleAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleActualSchedule
entryRuleActualSchedule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActualScheduleRule()); }
	 iv_ruleActualSchedule=ruleActualSchedule 
	 { $current=$iv_ruleActualSchedule.current; } 
	 EOF 
;

// Rule ActualSchedule
ruleActualSchedule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='actualSchedule' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getActualScheduleAccess().getActualScheduleKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getActualScheduleAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='start' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getActualScheduleAccess().getStartKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActualScheduleAccess().getStartDateParserRuleCall_3_0()); 
	    }
		lv_start_3_0=ruleDate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActualScheduleRule());
	        }
       		set(
       			$current, 
       			"start",
        		lv_start_3_0, 
        		"Date");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='end' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getActualScheduleAccess().getEndKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActualScheduleAccess().getEndDateParserRuleCall_4_1_0()); 
	    }
		lv_end_5_0=ruleDate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActualScheduleRule());
	        }
       		set(
       			$current, 
       			"end",
        		lv_end_5_0, 
        		"Date");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getActualScheduleAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleOrganizations
entryRuleOrganizations returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrganizationsRule()); }
	 iv_ruleOrganizations=ruleOrganizations 
	 { $current=$iv_ruleOrganizations.current; } 
	 EOF 
;

// Rule Organizations
ruleOrganizations returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='organizations' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOrganizationsAccess().getOrganizationsKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOrganizationsAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='customer' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOrganizationsAccess().getCustomerKeyword_2());
    }
(
(
		lv_customer_3_0=RULE_STRING
		{
			newLeafNode(lv_customer_3_0, grammarAccess.getOrganizationsAccess().getCustomerSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrganizationsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"customer",
        		lv_customer_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='supplier' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOrganizationsAccess().getSupplierKeyword_4());
    }
(
(
		lv_supplier_5_0=RULE_STRING
		{
			newLeafNode(lv_supplier_5_0, grammarAccess.getOrganizationsAccess().getSupplierSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrganizationsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"supplier",
        		lv_supplier_5_0, 
        		"STRING");
	    }

)
)	otherlv_6='partners' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOrganizationsAccess().getPartnersKeyword_6());
    }
(
(
		lv_partners_7_0=RULE_STRING
		{
			newLeafNode(lv_partners_7_0, grammarAccess.getOrganizationsAccess().getPartnersSTRINGTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrganizationsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"partners",
        		lv_partners_7_0, 
        		"STRING");
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getOrganizationsAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleGlossaryTerm
entryRuleGlossaryTerm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGlossaryTermRule()); }
	 iv_ruleGlossaryTerm=ruleGlossaryTerm 
	 { $current=$iv_ruleGlossaryTerm.current; } 
	 EOF 
;

// Rule GlossaryTerm
ruleGlossaryTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getGlossaryTermAccess().getUnorderedGroup());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGlossaryTermAccess().getUnorderedGroup(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGlossaryTermAccess().getUnorderedGroup(), 0);
	 				}
					({true}?=>(	otherlv_1='term' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGlossaryTermAccess().getTermKeyword_0_0());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getGlossaryTermAccess().getNameIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGlossaryTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getGlossaryTermAccess().getColonKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGlossaryTermAccess().getTypeTermTypeEnumRuleCall_0_3_0()); 
	    }
		lv_type_4_0=ruleTermType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlossaryTermRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"TermType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGlossaryTermAccess().getLeftCurlyBracketKeyword_0_4());
    }
(	otherlv_6='name' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGlossaryTermAccess().getNameKeyword_0_5_0());
    }
(
(
		lv_nameAlias_7_0=RULE_STRING
		{
			newLeafNode(lv_nameAlias_7_0, grammarAccess.getGlossaryTermAccess().getNameAliasSTRINGTerminalRuleCall_0_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGlossaryTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameAlias",
        		lv_nameAlias_7_0, 
        		"STRING");
	    }

)
))(	otherlv_8='acronym' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getGlossaryTermAccess().getAcronymKeyword_0_6_0());
    }
(
(
		lv_acronym_9_0=RULE_STRING
		{
			newLeafNode(lv_acronym_9_0, grammarAccess.getGlossaryTermAccess().getAcronymSTRINGTerminalRuleCall_0_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGlossaryTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"acronym",
        		lv_acronym_9_0, 
        		"STRING");
	    }

)
))?))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlossaryTermAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGlossaryTermAccess().getUnorderedGroup(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGlossaryTermAccess().getUnorderedGroup(), 1);
	 				}
					({true}?=>(	otherlv_10='applicationTo' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getGlossaryTermAccess().getApplicationToKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGlossaryTermAccess().getRefRefTermApplicationParserRuleCall_1_1_0()); 
	    }
		lv_ref_11_0=ruleRefTermApplication		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlossaryTermRule());
	        }
       		set(
       			$current, 
       			"ref",
        		lv_ref_11_0, 
        		"RefTermApplication");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlossaryTermAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGlossaryTermAccess().getUnorderedGroup(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGlossaryTermAccess().getUnorderedGroup(), 2);
	 				}
					({true}?=>(	otherlv_12='synonym' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getGlossaryTermAccess().getSynonymKeyword_2_0());
    }
(
(
		lv_synonym_13_0=RULE_STRING
		{
			newLeafNode(lv_synonym_13_0, grammarAccess.getGlossaryTermAccess().getSynonymSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGlossaryTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"synonym",
        		lv_synonym_13_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlossaryTermAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGlossaryTermAccess().getUnorderedGroup(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGlossaryTermAccess().getUnorderedGroup(), 3);
	 				}
					({true}?=>(	otherlv_14='isA' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getGlossaryTermAccess().getIsAKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGlossaryTermRule());
	        }
        }
	otherlv_15=RULE_ID
	{
		newLeafNode(otherlv_15, grammarAccess.getGlossaryTermAccess().getSuperGlossaryTermCrossReference_3_1_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlossaryTermAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGlossaryTermAccess().getUnorderedGroup(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGlossaryTermAccess().getUnorderedGroup(), 4);
	 				}
					({true}?=>((	otherlv_16='description' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getGlossaryTermAccess().getDescriptionKeyword_4_0_0());
    }
(
(
		lv_description_17_0=RULE_STRING
		{
			newLeafNode(lv_description_17_0, grammarAccess.getGlossaryTermAccess().getDescriptionSTRINGTerminalRuleCall_4_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGlossaryTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_17_0, 
        		"STRING");
	    }

)
))?	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getGlossaryTermAccess().getRightCurlyBracketKeyword_4_1());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlossaryTermAccess().getUnorderedGroup());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getGlossaryTermAccess().getUnorderedGroup())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getGlossaryTermAccess().getUnorderedGroup());
	}

)
;





// Entry rule entryRuleTermApplication
entryRuleTermApplication returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermApplicationRule()); }
	 iv_ruleTermApplication=ruleTermApplication 
	 { $current=$iv_ruleTermApplication.current; } 
	 EOF 
;

// Rule TermApplication
ruleTermApplication returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_value_0_1=	'Stakeholder' 
    {
        newLeafNode(lv_value_0_1, grammarAccess.getTermApplicationAccess().getValueStakeholderKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermApplicationRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_1, null);
	    }

    |		lv_value_0_2=	'System' 
    {
        newLeafNode(lv_value_0_2, grammarAccess.getTermApplicationAccess().getValueSystemKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermApplicationRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_2, null);
	    }

    |		lv_value_0_3=	'Actor' 
    {
        newLeafNode(lv_value_0_3, grammarAccess.getTermApplicationAccess().getValueActorKeyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermApplicationRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_3, null);
	    }

    |		lv_value_0_4=	'Entity' 
    {
        newLeafNode(lv_value_0_4, grammarAccess.getTermApplicationAccess().getValueEntityKeyword_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermApplicationRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_4, null);
	    }

    |		lv_value_0_5=	'Other' 
    {
        newLeafNode(lv_value_0_5, grammarAccess.getTermApplicationAccess().getValueOtherKeyword_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermApplicationRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_5, null);
	    }

)

)
)
;





// Entry rule entryRuleRefTermApplication
entryRuleRefTermApplication returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefTermApplicationRule()); }
	 iv_ruleRefTermApplication=ruleRefTermApplication 
	 { $current=$iv_ruleRefTermApplication.current; } 
	 EOF 
;

// Rule RefTermApplication
ruleRefTermApplication returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getRefTermApplicationAccess().getRefsTermApplicationParserRuleCall_0_0()); 
	    }
		lv_refs_0_0=ruleTermApplication		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefTermApplicationRule());
	        }
       		add(
       			$current, 
       			"refs",
        		lv_refs_0_0, 
        		"TermApplication");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRefTermApplicationAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRefTermApplicationAccess().getRefsTermApplicationParserRuleCall_1_1_0()); 
	    }
		lv_refs_2_0=ruleTermApplication		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefTermApplicationRule());
	        }
       		add(
       			$current, 
       			"refs",
        		lv_refs_2_0, 
        		"TermApplication");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleStakeholder
entryRuleStakeholder returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStakeholderRule()); }
	 iv_ruleStakeholder=ruleStakeholder 
	 { $current=$iv_ruleStakeholder.current; } 
	 EOF 
;

// Rule Stakeholder
ruleStakeholder returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getStakeholderAccess().getUnorderedGroup());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderAccess().getUnorderedGroup(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStakeholderAccess().getUnorderedGroup(), 0);
	 				}
					({true}?=>(	otherlv_1='stakeholder' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStakeholderAccess().getStakeholderKeyword_0_0());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getStakeholderAccess().getNameIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStakeholderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStakeholderAccess().getColonKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStakeholderAccess().getTypeStakeholderTypeEnumRuleCall_0_3_0()); 
	    }
		lv_type_4_0=ruleStakeholderType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStakeholderRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"StakeholderType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStakeholderAccess().getLeftCurlyBracketKeyword_0_4());
    }
(	otherlv_6='name' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStakeholderAccess().getNameKeyword_0_5_0());
    }
(
(
		lv_nameAlias_7_0=RULE_STRING
		{
			newLeafNode(lv_nameAlias_7_0, grammarAccess.getStakeholderAccess().getNameAliasSTRINGTerminalRuleCall_0_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStakeholderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameAlias",
        		lv_nameAlias_7_0, 
        		"STRING");
	    }

)
))(	otherlv_8='category' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStakeholderAccess().getCategoryKeyword_0_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStakeholderAccess().getCategoryStakeholderCategoryEnumRuleCall_0_6_1_0()); 
	    }
		lv_category_9_0=ruleStakeholderCategory		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStakeholderRule());
	        }
       		set(
       			$current, 
       			"category",
        		lv_category_9_0, 
        		"StakeholderCategory");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_10='isA' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getStakeholderAccess().getIsAKeyword_0_7_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStakeholderRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getStakeholderAccess().getSuperStakeholderCrossReference_0_7_1_0()); 
	}

)
))?))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStakeholderAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderAccess().getUnorderedGroup(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStakeholderAccess().getUnorderedGroup(), 1);
	 				}
					({true}?=>(	otherlv_12='partOf' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getStakeholderAccess().getPartOfKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStakeholderRule());
	        }
        }
	otherlv_13=RULE_ID
	{
		newLeafNode(otherlv_13, grammarAccess.getStakeholderAccess().getPartOfStakeholderCrossReference_1_1_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStakeholderAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderAccess().getUnorderedGroup(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStakeholderAccess().getUnorderedGroup(), 2);
	 				}
					({true}?=>((	otherlv_14='description' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getStakeholderAccess().getDescriptionKeyword_2_0_0());
    }
(
(
		lv_description_15_0=RULE_STRING
		{
			newLeafNode(lv_description_15_0, grammarAccess.getStakeholderAccess().getDescriptionSTRINGTerminalRuleCall_2_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStakeholderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_15_0, 
        		"STRING");
	    }

)
))?	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getStakeholderAccess().getRightCurlyBracketKeyword_2_1());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStakeholderAccess().getUnorderedGroup());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getStakeholderAccess().getUnorderedGroup())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getStakeholderAccess().getUnorderedGroup());
	}

)
;





// Entry rule entryRuleSystem
entryRuleSystem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSystemRule()); }
	 iv_ruleSystem=ruleSystem 
	 { $current=$iv_ruleSystem.current; } 
	 EOF 
;

// Rule System
ruleSystem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='system' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSystemAccess().getSystemKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSystemAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSystemAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemAccess().getTypeSystemTypeEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleSystemType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"SystemType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_4());
    }
(	otherlv_5='name' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSystemAccess().getNameKeyword_5_0());
    }
(
(
		lv_nameAlias_6_0=RULE_STRING
		{
			newLeafNode(lv_nameAlias_6_0, grammarAccess.getSystemAccess().getNameAliasSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameAlias",
        		lv_nameAlias_6_0, 
        		"STRING");
	    }

)
))	otherlv_7='scope' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSystemAccess().getScopeKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemAccess().getScopeSystemScopeEnumRuleCall_7_0()); 
	    }
		lv_scope_8_0=ruleSystemScope		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemRule());
	        }
       		set(
       			$current, 
       			"scope",
        		lv_scope_8_0, 
        		"SystemScope");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9='subSystems' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSystemAccess().getSubSystemsKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemAccess().getSubSystemsRefSystemParserRuleCall_8_1_0()); 
	    }
		lv_subSystems_10_0=ruleRefSystem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemRule());
	        }
       		set(
       			$current, 
       			"subSystems",
        		lv_subSystems_10_0, 
        		"RefSystem");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='reusableSystems' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSystemAccess().getReusableSystemsKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemAccess().getReusableSystemsRefSystemParserRuleCall_9_1_0()); 
	    }
		lv_reusableSystems_12_0=ruleRefSystem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemRule());
	        }
       		set(
       			$current, 
       			"reusableSystems",
        		lv_reusableSystems_12_0, 
        		"RefSystem");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_13='description' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSystemAccess().getDescriptionKeyword_10_0());
    }
(
(
		lv_description_14_0=RULE_STRING
		{
			newLeafNode(lv_description_14_0, grammarAccess.getSystemAccess().getDescriptionSTRINGTerminalRuleCall_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_14_0, 
        		"STRING");
	    }

)
))?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleRefSystem
entryRuleRefSystem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefSystemRule()); }
	 iv_ruleRefSystem=ruleRefSystem 
	 { $current=$iv_ruleRefSystem.current; } 
	 EOF 
;

// Rule RefSystem
ruleRefSystem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefSystemRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getRefSystemAccess().getRefsSystemCrossReference_0_0()); 
	}

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRefSystemAccess().getCommaKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefSystemRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getRefSystemAccess().getRefsSystemCrossReference_1_1_0()); 
	}

)
))*)
;





// Entry rule entryRuleSystemRelation
entryRuleSystemRelation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSystemRelationRule()); }
	 iv_ruleSystemRelation=ruleSystemRelation 
	 { $current=$iv_ruleSystemRelation.current; } 
	 EOF 
;

// Rule SystemRelation
ruleSystemRelation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='systemRelation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSystemRelationAccess().getSystemRelationKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSystemRelationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemRelationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSystemRelationAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemRelationAccess().getTypeSystemRelationTypeEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleSystemRelationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemRelationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"SystemRelationType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSystemRelationAccess().getLeftCurlyBracketKeyword_4());
    }
	otherlv_5='source' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSystemRelationAccess().getSourceKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemRelationRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getSystemRelationAccess().getSourceSystemCrossReference_6_0()); 
	}

)
)	otherlv_7='target' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSystemRelationAccess().getTargetKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemRelationRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getSystemRelationAccess().getTargetSystemCrossReference_8_0()); 
	}

)
)	otherlv_9='category' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSystemRelationAccess().getCategoryKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSystemRelationAccess().getCategorySystemRelationCategoryEnumRuleCall_10_0()); 
	    }
		lv_category_10_0=ruleSystemRelationCategory		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSystemRelationRule());
	        }
       		set(
       			$current, 
       			"category",
        		lv_category_10_0, 
        		"SystemRelationCategory");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11='description' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSystemRelationAccess().getDescriptionKeyword_11_0());
    }
(
(
		lv_description_12_0=RULE_STRING
		{
			newLeafNode(lv_description_12_0, grammarAccess.getSystemRelationAccess().getDescriptionSTRINGTerminalRuleCall_11_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSystemRelationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_12_0, 
        		"STRING");
	    }

)
))?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSystemRelationAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	 iv_ruleEntity=ruleEntity 
	 { $current=$iv_ruleEntity.current; } 
	 EOF 
;

// Rule Entity
ruleEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='entity' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getEntityKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getTypeEntityTypeEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleEntityType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"EntityType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_4());
    }
(	otherlv_5='name' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEntityAccess().getNameKeyword_5_0());
    }
(
(
		lv_nameAlias_6_0=RULE_STRING
		{
			newLeafNode(lv_nameAlias_6_0, grammarAccess.getEntityAccess().getNameAliasSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameAlias",
        		lv_nameAlias_6_0, 
        		"STRING");
	    }

)
))(	otherlv_7='isA' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEntityAccess().getIsAKeyword_6_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getEntityAccess().getSuperEntityCrossReference_6_1_0()); 
	}

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_7_0()); 
	    }
		lv_attributes_9_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_9_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getPrimaryKeyPrimaryKeyParserRuleCall_8_0()); 
	    }
		lv_primaryKey_10_0=rulePrimaryKey		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		set(
       			$current, 
       			"primaryKey",
        		lv_primaryKey_10_0, 
        		"PrimaryKey");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getForeignKeysForeignKeyParserRuleCall_9_0()); 
	    }
		lv_foreignKeys_11_0=ruleForeignKey		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		add(
       			$current, 
       			"foreignKeys",
        		lv_foreignKeys_11_0, 
        		"ForeignKey");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getChecksCheckParserRuleCall_10_0()); 
	    }
		lv_checks_12_0=ruleCheck		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		add(
       			$current, 
       			"checks",
        		lv_checks_12_0, 
        		"Check");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_13='description' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getEntityAccess().getDescriptionKeyword_11_0());
    }
(
(
		lv_description_14_0=RULE_STRING
		{
			newLeafNode(lv_description_14_0, grammarAccess.getEntityAccess().getDescriptionSTRINGTerminalRuleCall_11_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_14_0, 
        		"STRING");
	    }

)
))?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='attribute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getAttributeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttributeAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getTypeAttributeTypeEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleAttributeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"AttributeType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAttributeAccess().getLeftParenthesisKeyword_4_0());
    }
(
(
		lv_size_5_0=RULE_INT
		{
			newLeafNode(lv_size_5_0, grammarAccess.getAttributeAccess().getSizeINTTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"size",
        		lv_size_5_0, 
        		"INT");
	    }

)
)(	otherlv_6='.' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAttributeAccess().getFullStopKeyword_4_2_0());
    }
(
(
		lv_subsize_7_0=RULE_INT
		{
			newLeafNode(lv_subsize_7_0, grammarAccess.getAttributeAccess().getSubsizeINTTerminalRuleCall_4_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"subsize",
        		lv_subsize_7_0, 
        		"INT");
	    }

)
))?	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAttributeAccess().getRightParenthesisKeyword_4_3());
    }
)?	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAttributeAccess().getLeftCurlyBracketKeyword_5());
    }
(	otherlv_10='name' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getAttributeAccess().getNameKeyword_6_0());
    }
(
(
		lv_nameAlias_11_0=RULE_STRING
		{
			newLeafNode(lv_nameAlias_11_0, grammarAccess.getAttributeAccess().getNameAliasSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameAlias",
        		lv_nameAlias_11_0, 
        		"STRING");
	    }

)
))(	otherlv_12='multiplicity' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getAttributeAccess().getMultiplicityKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getMultiplicityMultiplicityParserRuleCall_7_1_0()); 
	    }
		lv_multiplicity_13_0=ruleMultiplicity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"multiplicity",
        		lv_multiplicity_13_0, 
        		"Multiplicity");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_14='defaultValue' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getAttributeAccess().getDefaultValueKeyword_8_0());
    }
(
(
		lv_defaultValue_15_0=RULE_STRING
		{
			newLeafNode(lv_defaultValue_15_0, grammarAccess.getAttributeAccess().getDefaultValueSTRINGTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"defaultValue",
        		lv_defaultValue_15_0, 
        		"STRING");
	    }

)
))?(
(
		lv_notNull_16_0=	'NotNull' 
    {
        newLeafNode(lv_notNull_16_0, grammarAccess.getAttributeAccess().getNotNullNotNullKeyword_9_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed($current, "notNull", lv_notNull_16_0, "NotNull");
	    }

)
)?(
(
		lv_unique_17_0=	'Unique' 
    {
        newLeafNode(lv_unique_17_0, grammarAccess.getAttributeAccess().getUniqueUniqueKeyword_10_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed($current, "unique", lv_unique_17_0, "Unique");
	    }

)
)?(	otherlv_18='description' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getAttributeAccess().getDescriptionKeyword_11_0());
    }
(
(
		lv_description_19_0=RULE_STRING
		{
			newLeafNode(lv_description_19_0, grammarAccess.getAttributeAccess().getDescriptionSTRINGTerminalRuleCall_11_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_19_0, 
        		"STRING");
	    }

)
))?	otherlv_20='}' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getAttributeAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleMultiplicity
entryRuleMultiplicity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiplicityRule()); }
	 iv_ruleMultiplicity=ruleMultiplicity 
	 { $current=$iv_ruleMultiplicity.current; } 
	 EOF 
;

// Rule Multiplicity
ruleMultiplicity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_value_0_1=	'"0"' 
    {
        newLeafNode(lv_value_0_1, grammarAccess.getMultiplicityAccess().getValue0Keyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicityRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_1, null);
	    }

    |		lv_value_0_2=	'"1"' 
    {
        newLeafNode(lv_value_0_2, grammarAccess.getMultiplicityAccess().getValue1Keyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicityRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_2, null);
	    }

    |		lv_value_0_3=	'"0..1"' 
    {
        newLeafNode(lv_value_0_3, grammarAccess.getMultiplicityAccess().getValue01Keyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicityRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_3, null);
	    }

    |		lv_value_0_4=	'"*"' 
    {
        newLeafNode(lv_value_0_4, grammarAccess.getMultiplicityAccess().getValueQuotationMarkAsteriskQuotationMarkKeyword_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicityRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_0_4, null);
	    }

    |		lv_value_0_5=RULE_STRING
		{
			newLeafNode(lv_value_0_5, grammarAccess.getMultiplicityAccess().getValueSTRINGTerminalRuleCall_0_4()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_5, 
        		"STRING");
	    }

)

)
)
;





// Entry rule entryRulePrimaryKey
entryRulePrimaryKey returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryKeyRule()); }
	 iv_rulePrimaryKey=rulePrimaryKey 
	 { $current=$iv_rulePrimaryKey.current; } 
	 EOF 
;

// Rule PrimaryKey
rulePrimaryKey returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='primaryKey' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrimaryKeyAccess().getPrimaryKeyKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPrimaryKeyAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryKeyAccess().getRefToRefAttributeParserRuleCall_2_0()); 
	    }
		lv_refTo_2_0=ruleRefAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryKeyRule());
	        }
       		set(
       			$current, 
       			"refTo",
        		lv_refTo_2_0, 
        		"RefAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPrimaryKeyAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleForeignKey
entryRuleForeignKey returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getForeignKeyRule()); }
	 iv_ruleForeignKey=ruleForeignKey 
	 { $current=$iv_ruleForeignKey.current; } 
	 EOF 
;

// Rule ForeignKey
ruleForeignKey returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='foreignKey' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getForeignKeyAccess().getForeignKeyKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getForeignKeyRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getForeignKeyAccess().getFentityEntityCrossReference_1_0()); 
	}

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getForeignKeyAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForeignKeyAccess().getRefToRefAttributeParserRuleCall_3_0()); 
	    }
		lv_refTo_3_0=ruleRefAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForeignKeyRule());
	        }
       		set(
       			$current, 
       			"refTo",
        		lv_refTo_3_0, 
        		"RefAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getForeignKeyAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleRefAttribute
entryRuleRefAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefAttributeRule()); }
	 iv_ruleRefAttribute=ruleRefAttribute 
	 { $current=$iv_ruleRefAttribute.current; } 
	 EOF 
;

// Rule RefAttribute
ruleRefAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefAttributeRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getRefAttributeAccess().getRefAttrAttributeCrossReference_0_0()); 
	}

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRefAttributeAccess().getCommaKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefAttributeRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getRefAttributeAccess().getRefAttrAttributeCrossReference_1_1_0()); 
	}

)
))*)
;





// Entry rule entryRuleCheck
entryRuleCheck returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCheckRule()); }
	 iv_ruleCheck=ruleCheck 
	 { $current=$iv_ruleCheck.current; } 
	 EOF 
;

// Rule Check
ruleCheck returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='check' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCheckAccess().getCheckKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCheckAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCheckRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		lv_checkExpression_2_0=RULE_STRING
		{
			newLeafNode(lv_checkExpression_2_0, grammarAccess.getCheckAccess().getCheckExpressionSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCheckRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"checkExpression",
        		lv_checkExpression_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleBusinessEntity
entryRuleBusinessEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBusinessEntityRule()); }
	 iv_ruleBusinessEntity=ruleBusinessEntity 
	 { $current=$iv_ruleBusinessEntity.current; } 
	 EOF 
;

// Rule BusinessEntity
ruleBusinessEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='businessEntity' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBusinessEntityAccess().getBusinessEntityKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBusinessEntityAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBusinessEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBusinessEntityAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBusinessEntityAccess().getTypeBusinessEntityTypeEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleBusinessEntityType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBusinessEntityRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"BusinessEntityType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBusinessEntityAccess().getLeftCurlyBracketKeyword_4());
    }
(	otherlv_5='name' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBusinessEntityAccess().getNameKeyword_5_0());
    }
(
(
		lv_nameAlias_6_0=RULE_STRING
		{
			newLeafNode(lv_nameAlias_6_0, grammarAccess.getBusinessEntityAccess().getNameAliasSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBusinessEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameAlias",
        		lv_nameAlias_6_0, 
        		"STRING");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getBusinessEntityAccess().getMasterMasterBEntityParserRuleCall_6_0()); 
	    }
		lv_master_7_0=ruleMasterBEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBusinessEntityRule());
	        }
       		set(
       			$current, 
       			"master",
        		lv_master_7_0, 
        		"MasterBEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBusinessEntityAccess().getDetailDetailBEntityParserRuleCall_7_0()); 
	    }
		lv_detail_8_0=ruleDetailBEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBusinessEntityRule());
	        }
       		set(
       			$current, 
       			"detail",
        		lv_detail_8_0, 
        		"DetailBEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getBusinessEntityAccess().getReferenceReferenceBEntityParserRuleCall_8_0()); 
	    }
		lv_reference_9_0=ruleReferenceBEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBusinessEntityRule());
	        }
       		set(
       			$current, 
       			"reference",
        		lv_reference_9_0, 
        		"ReferenceBEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_10='description' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getBusinessEntityAccess().getDescriptionKeyword_9_0());
    }
(
(
		lv_description_11_0=RULE_STRING
		{
			newLeafNode(lv_description_11_0, grammarAccess.getBusinessEntityAccess().getDescriptionSTRINGTerminalRuleCall_9_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBusinessEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_11_0, 
        		"STRING");
	    }

)
))?	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getBusinessEntityAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleMasterBEntity
entryRuleMasterBEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMasterBEntityRule()); }
	 iv_ruleMasterBEntity=ruleMasterBEntity 
	 { $current=$iv_ruleMasterBEntity.current; } 
	 EOF 
;

// Rule MasterBEntity
ruleMasterBEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='master' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMasterBEntityAccess().getMasterKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMasterBEntityRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getMasterBEntityAccess().getMasterEntityEntityCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleDetailBEntity
entryRuleDetailBEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDetailBEntityRule()); }
	 iv_ruleDetailBEntity=ruleDetailBEntity 
	 { $current=$iv_ruleDetailBEntity.current; } 
	 EOF 
;

// Rule DetailBEntity
ruleDetailBEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='detail' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDetailBEntityAccess().getDetailKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDetailBEntityRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getDetailBEntityAccess().getEntityDetailEntityCrossReference_1_0()); 
	}

)
)(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDetailBEntityAccess().getLeftCurlyBracketKeyword_2_0());
    }
	otherlv_3='reference' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDetailBEntityAccess().getReferenceKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDetailBEntityAccess().getRefEntityRefEntityParserRuleCall_2_2_0()); 
	    }
		lv_refEntity_4_0=ruleRefEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDetailBEntityRule());
	        }
       		set(
       			$current, 
       			"refEntity",
        		lv_refEntity_4_0, 
        		"RefEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDetailBEntityAccess().getRightCurlyBracketKeyword_2_3());
    }
)?)
;





// Entry rule entryRuleReferenceBEntity
entryRuleReferenceBEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceBEntityRule()); }
	 iv_ruleReferenceBEntity=ruleReferenceBEntity 
	 { $current=$iv_ruleReferenceBEntity.current; } 
	 EOF 
;

// Rule ReferenceBEntity
ruleReferenceBEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='reference' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReferenceBEntityAccess().getReferenceKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceBEntityAccess().getRefEntityRefEntityParserRuleCall_1_0()); 
	    }
		lv_refEntity_1_0=ruleRefEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceBEntityRule());
	        }
       		set(
       			$current, 
       			"refEntity",
        		lv_refEntity_1_0, 
        		"RefEntity");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRefEntity
entryRuleRefEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefEntityRule()); }
	 iv_ruleRefEntity=ruleRefEntity 
	 { $current=$iv_ruleRefEntity.current; } 
	 EOF 
;

// Rule RefEntity
ruleRefEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefEntityRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getRefEntityAccess().getRefEntityEntityCrossReference_0_0()); 
	}

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRefEntityAccess().getCommaKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefEntityRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getRefEntityAccess().getRefEntityEntityCrossReference_1_1_0()); 
	}

)
))*)
;





// Entry rule entryRuleActor
entryRuleActor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActorRule()); }
	 iv_ruleActor=ruleActor 
	 { $current=$iv_ruleActor.current; } 
	 EOF 
;

// Rule Actor
ruleActor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='actor' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getActorAccess().getActorKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getActorAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getActorAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorAccess().getTypeActorTypeEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleActorType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"ActorType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getActorAccess().getLeftCurlyBracketKeyword_4());
    }
(	otherlv_5='name' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getActorAccess().getNameKeyword_5_0());
    }
(
(
		lv_nameAlias_6_0=RULE_STRING
		{
			newLeafNode(lv_nameAlias_6_0, grammarAccess.getActorAccess().getNameAliasSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameAlias",
        		lv_nameAlias_6_0, 
        		"STRING");
	    }

)
))(	otherlv_7='stakeholder' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getActorAccess().getStakeholderKeyword_6_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getActorAccess().getStakeholderStakeholderCrossReference_6_1_0()); 
	}

)
))?(	otherlv_9='isA' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getActorAccess().getIsAKeyword_7_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorRule());
	        }
        }
	otherlv_10=RULE_ID
	{
		newLeafNode(otherlv_10, grammarAccess.getActorAccess().getSuperActorCrossReference_7_1_0()); 
	}

)
))?(	otherlv_11='description' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getActorAccess().getDescriptionKeyword_8_0());
    }
(
(
		lv_description_12_0=RULE_STRING
		{
			newLeafNode(lv_description_12_0, grammarAccess.getActorAccess().getDescriptionSTRINGTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_12_0, 
        		"STRING");
	    }

)
))?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getActorAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleRequirement
entryRuleRequirement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequirementRule()); }
	 iv_ruleRequirement=ruleRequirement 
	 { $current=$iv_ruleRequirement.current; } 
	 EOF 
;

// Rule Requirement
ruleRequirement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRequirementAccess().getGoalParserRuleCall_0()); 
    }
    this_Goal_0=ruleGoal
    { 
        $current = $this_Goal_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRequirementAccess().getFRParserRuleCall_1()); 
    }
    this_FR_1=ruleFR
    { 
        $current = $this_FR_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRequirementAccess().getQRParserRuleCall_2()); 
    }
    this_QR_2=ruleQR
    { 
        $current = $this_QR_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRequirementAccess().getConstraintParserRuleCall_3()); 
    }
    this_Constraint_3=ruleConstraint
    { 
        $current = $this_Constraint_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRequirementAccess().getUseCaseParserRuleCall_4()); 
    }
    this_UseCase_4=ruleUseCase
    { 
        $current = $this_UseCase_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRequirementRelation
entryRuleRequirementRelation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequirementRelationRule()); }
	 iv_ruleRequirementRelation=ruleRequirementRelation 
	 { $current=$iv_ruleRequirementRelation.current; } 
	 EOF 
;

// Rule RequirementRelation
ruleRequirementRelation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='requirementRelation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRequirementRelationAccess().getRequirementRelationKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRequirementRelationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRelationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRequirementRelationAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementRelationAccess().getTypeRequirementRelationTypeEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleRequirementRelationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRelationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"RequirementRelationType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRequirementRelationAccess().getLeftCurlyBracketKeyword_4());
    }
	otherlv_5='source' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRequirementRelationAccess().getSourceKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRelationRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getRequirementRelationAccess().getSourceRequirementCrossReference_6_0()); 
	}

)
)	otherlv_7='target' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRequirementRelationAccess().getTargetKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRelationRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getRequirementRelationAccess().getTargetRequirementCrossReference_8_0()); 
	}

)
)(	otherlv_9='description' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRequirementRelationAccess().getDescriptionKeyword_9_0());
    }
(
(
		lv_description_10_0=RULE_STRING
		{
			newLeafNode(lv_description_10_0, grammarAccess.getRequirementRelationAccess().getDescriptionSTRINGTerminalRuleCall_9_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRelationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_10_0, 
        		"STRING");
	    }

)
))?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getRequirementRelationAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleGoal
entryRuleGoal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGoalRule()); }
	 iv_ruleGoal=ruleGoal 
	 { $current=$iv_ruleGoal.current; } 
	 EOF 
;

// Rule Goal
ruleGoal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='goal' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGoalAccess().getGoalKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getGoalAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGoalAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getTypeGoalTypeEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleGoalType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"GoalType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGoalAccess().getLeftCurlyBracketKeyword_4());
    }
(	otherlv_5='name' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGoalAccess().getNameKeyword_5_0());
    }
(
(
		lv_nameAlias_6_0=RULE_STRING
		{
			newLeafNode(lv_nameAlias_6_0, grammarAccess.getGoalAccess().getNameAliasSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameAlias",
        		lv_nameAlias_6_0, 
        		"STRING");
	    }

)
))(	otherlv_7='stakeholder' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getGoalAccess().getStakeholderKeyword_6_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getGoalAccess().getStakeholderStakeholderCrossReference_6_1_0()); 
	}

)
))?(	otherlv_9='partOf' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getGoalAccess().getPartOfKeyword_7_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
	otherlv_10=RULE_ID
	{
		newLeafNode(otherlv_10, grammarAccess.getGoalAccess().getPartOfGoalCrossReference_7_1_0()); 
	}

)
))?(	otherlv_11='priority' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getGoalAccess().getPriorityKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getPriorityPriorityParserRuleCall_8_1_0()); 
	    }
		lv_priority_12_0=rulePriority		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		set(
       			$current, 
       			"priority",
        		lv_priority_12_0, 
        		"Priority");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_13='progress' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getGoalAccess().getProgressKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getProgressProgressParserRuleCall_9_1_0()); 
	    }
		lv_progress_14_0=ruleProgress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		set(
       			$current, 
       			"progress",
        		lv_progress_14_0, 
        		"Progress");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_15='description' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getGoalAccess().getDescriptionKeyword_10_0());
    }
(
(
		lv_description_16_0=RULE_STRING
		{
			newLeafNode(lv_description_16_0, grammarAccess.getGoalAccess().getDescriptionSTRINGTerminalRuleCall_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_16_0, 
        		"STRING");
	    }

)
))?	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getGoalAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleFR
entryRuleFR returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFRRule()); }
	 iv_ruleFR=ruleFR 
	 { $current=$iv_ruleFR.current; } 
	 EOF 
;

// Rule FR
ruleFR returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='FR' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFRAccess().getFRKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFRAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFRRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFRAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFRAccess().getTypeFRTypeEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleFRType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFRRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"FRType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFRAccess().getLeftCurlyBracketKeyword_4());
    }
(	otherlv_5='name' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFRAccess().getNameKeyword_5_0());
    }
(
(
		lv_nameAlias_6_0=RULE_STRING
		{
			newLeafNode(lv_nameAlias_6_0, grammarAccess.getFRAccess().getNameAliasSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFRRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameAlias",
        		lv_nameAlias_6_0, 
        		"STRING");
	    }

)
))(	otherlv_7='stakeholder' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFRAccess().getStakeholderKeyword_6_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFRRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getFRAccess().getStakeholderStakeholderCrossReference_6_1_0()); 
	}

)
))?(	otherlv_9='partOf' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFRAccess().getPartOfKeyword_7_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFRRule());
	        }
        }
	otherlv_10=RULE_ID
	{
		newLeafNode(otherlv_10, grammarAccess.getFRAccess().getPartOfFRCrossReference_7_1_0()); 
	}

)
))?(	otherlv_11='priority' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFRAccess().getPriorityKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFRAccess().getPriorityPriorityParserRuleCall_8_1_0()); 
	    }
		lv_priority_12_0=rulePriority		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFRRule());
	        }
       		set(
       			$current, 
       			"priority",
        		lv_priority_12_0, 
        		"Priority");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_13='progress' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFRAccess().getProgressKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFRAccess().getProgressProgressParserRuleCall_9_1_0()); 
	    }
		lv_progress_14_0=ruleProgress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFRRule());
	        }
       		set(
       			$current, 
       			"progress",
        		lv_progress_14_0, 
        		"Progress");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_15='description' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getFRAccess().getDescriptionKeyword_10_0());
    }
(
(
		lv_description_16_0=RULE_STRING
		{
			newLeafNode(lv_description_16_0, grammarAccess.getFRAccess().getDescriptionSTRINGTerminalRuleCall_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFRRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_16_0, 
        		"STRING");
	    }

)
))?	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getFRAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleQR
entryRuleQR returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQRRule()); }
	 iv_ruleQR=ruleQR 
	 { $current=$iv_ruleQR.current; } 
	 EOF 
;

// Rule QR
ruleQR returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='QR' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQRAccess().getQRKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getQRAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQRRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getQRAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQRAccess().getTypeQRTypeEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleQRType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQRRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"QRType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getQRAccess().getColonKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQRAccess().getSubTypeQRSubTypeEnumRuleCall_4_1_0()); 
	    }
		lv_subType_5_0=ruleQRSubType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQRRule());
	        }
       		set(
       			$current, 
       			"subType",
        		lv_subType_5_0, 
        		"QRSubType");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getQRAccess().getLeftCurlyBracketKeyword_5());
    }
(	otherlv_7='name' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getQRAccess().getNameKeyword_6_0());
    }
(
(
		lv_nameAlias_8_0=RULE_STRING
		{
			newLeafNode(lv_nameAlias_8_0, grammarAccess.getQRAccess().getNameAliasSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQRRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameAlias",
        		lv_nameAlias_8_0, 
        		"STRING");
	    }

)
))(	otherlv_9='metric' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getQRAccess().getMetricKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQRAccess().getMetricMetricEnumRuleCall_7_1_0()); 
	    }
		lv_metric_10_0=ruleMetric		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQRRule());
	        }
       		set(
       			$current, 
       			"metric",
        		lv_metric_10_0, 
        		"Metric");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='value' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getQRAccess().getValueKeyword_8_0());
    }
(
(
		lv_value_12_0=RULE_INT
		{
			newLeafNode(lv_value_12_0, grammarAccess.getQRAccess().getValueINTTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQRRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_12_0, 
        		"INT");
	    }

)
))?(	otherlv_13='stakeholder' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getQRAccess().getStakeholderKeyword_9_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getQRRule());
	        }
        }
	otherlv_14=RULE_ID
	{
		newLeafNode(otherlv_14, grammarAccess.getQRAccess().getStakeholderStakeholderCrossReference_9_1_0()); 
	}

)
))?(	otherlv_15='partOf' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getQRAccess().getPartOfKeyword_10_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getQRRule());
	        }
        }
	otherlv_16=RULE_ID
	{
		newLeafNode(otherlv_16, grammarAccess.getQRAccess().getPartOfQRCrossReference_10_1_0()); 
	}

)
))?(	otherlv_17='priority' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getQRAccess().getPriorityKeyword_11_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQRAccess().getPriorityPriorityParserRuleCall_11_1_0()); 
	    }
		lv_priority_18_0=rulePriority		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQRRule());
	        }
       		set(
       			$current, 
       			"priority",
        		lv_priority_18_0, 
        		"Priority");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_19='progress' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getQRAccess().getProgressKeyword_12_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQRAccess().getProgressProgressParserRuleCall_12_1_0()); 
	    }
		lv_progress_20_0=ruleProgress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQRRule());
	        }
       		set(
       			$current, 
       			"progress",
        		lv_progress_20_0, 
        		"Progress");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_21='description' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getQRAccess().getDescriptionKeyword_13_0());
    }
(
(
		lv_description_22_0=RULE_STRING
		{
			newLeafNode(lv_description_22_0, grammarAccess.getQRAccess().getDescriptionSTRINGTerminalRuleCall_13_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQRRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_22_0, 
        		"STRING");
	    }

)
))?	otherlv_23='}' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getQRAccess().getRightCurlyBracketKeyword_14());
    }
)
;





// Entry rule entryRuleConstraint
entryRuleConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstraintRule()); }
	 iv_ruleConstraint=ruleConstraint 
	 { $current=$iv_ruleConstraint.current; } 
	 EOF 
;

// Rule Constraint
ruleConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='constraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstraintAccess().getConstraintKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getConstraintAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstraintRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConstraintAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintAccess().getTypeConstraintTypeEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleConstraintType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"ConstraintType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConstraintAccess().getColonKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintAccess().getSubTypeConstraintSubTypeEnumRuleCall_4_1_0()); 
	    }
		lv_subType_5_0=ruleConstraintSubType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintRule());
	        }
       		set(
       			$current, 
       			"subType",
        		lv_subType_5_0, 
        		"ConstraintSubType");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getConstraintAccess().getLeftCurlyBracketKeyword_5());
    }
(	otherlv_7='name' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConstraintAccess().getNameKeyword_6_0());
    }
(
(
		lv_nameAlias_8_0=RULE_STRING
		{
			newLeafNode(lv_nameAlias_8_0, grammarAccess.getConstraintAccess().getNameAliasSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstraintRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameAlias",
        		lv_nameAlias_8_0, 
        		"STRING");
	    }

)
))(	otherlv_9='stakeholder' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getConstraintAccess().getStakeholderKeyword_7_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstraintRule());
	        }
        }
	otherlv_10=RULE_ID
	{
		newLeafNode(otherlv_10, grammarAccess.getConstraintAccess().getStakeholderStakeholderCrossReference_7_1_0()); 
	}

)
))?(	otherlv_11='partOf' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getConstraintAccess().getPartOfKeyword_8_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstraintRule());
	        }
        }
	otherlv_12=RULE_ID
	{
		newLeafNode(otherlv_12, grammarAccess.getConstraintAccess().getPartOfConstraintCrossReference_8_1_0()); 
	}

)
))?(	otherlv_13='priority' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getConstraintAccess().getPriorityKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintAccess().getPriorityPriorityParserRuleCall_9_1_0()); 
	    }
		lv_priority_14_0=rulePriority		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintRule());
	        }
       		set(
       			$current, 
       			"priority",
        		lv_priority_14_0, 
        		"Priority");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_15='progress' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getConstraintAccess().getProgressKeyword_10_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintAccess().getProgressProgressParserRuleCall_10_1_0()); 
	    }
		lv_progress_16_0=ruleProgress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintRule());
	        }
       		set(
       			$current, 
       			"progress",
        		lv_progress_16_0, 
        		"Progress");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_17='description' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getConstraintAccess().getDescriptionKeyword_11_0());
    }
(
(
		lv_description_18_0=RULE_STRING
		{
			newLeafNode(lv_description_18_0, grammarAccess.getConstraintAccess().getDescriptionSTRINGTerminalRuleCall_11_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstraintRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_18_0, 
        		"STRING");
	    }

)
))?	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getConstraintAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleUseCase
entryRuleUseCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUseCaseRule()); }
	 iv_ruleUseCase=ruleUseCase 
	 { $current=$iv_ruleUseCase.current; } 
	 EOF 
;

// Rule UseCase
ruleUseCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='useCase' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUseCaseAccess().getUseCaseKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getUseCaseAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUseCaseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUseCaseAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUseCaseAccess().getTypeUseCaseTypeEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleUseCaseType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUseCaseRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"UseCaseType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUseCaseAccess().getLeftCurlyBracketKeyword_4());
    }
(	otherlv_5='name' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getUseCaseAccess().getNameKeyword_5_0());
    }
(
(
		lv_nameAlias_6_0=RULE_STRING
		{
			newLeafNode(lv_nameAlias_6_0, grammarAccess.getUseCaseAccess().getNameAliasSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUseCaseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameAlias",
        		lv_nameAlias_6_0, 
        		"STRING");
	    }

)
))(	otherlv_7='actorInitiates' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getUseCaseAccess().getActorInitiatesKeyword_6_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUseCaseRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getUseCaseAccess().getActorInitiatesActorCrossReference_6_1_0()); 
	}

)
))(	otherlv_9='actorParticipates' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getUseCaseAccess().getActorParticipatesKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUseCaseAccess().getActorParticipatesRefActorParserRuleCall_7_1_0()); 
	    }
		lv_actorParticipates_10_0=ruleRefActor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUseCaseRule());
	        }
       		add(
       			$current, 
       			"actorParticipates",
        		lv_actorParticipates_10_0, 
        		"RefActor");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='businessEntity' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getUseCaseAccess().getBusinessEntityKeyword_8_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUseCaseRule());
	        }
        }
	otherlv_12=RULE_ID
	{
		newLeafNode(otherlv_12, grammarAccess.getUseCaseAccess().getBEntityBusinessEntityCrossReference_8_1_0()); 
	}

)
))?(	otherlv_13='precondition' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getUseCaseAccess().getPreconditionKeyword_9_0());
    }
(
(
		lv_precondition_14_0=RULE_STRING
		{
			newLeafNode(lv_precondition_14_0, grammarAccess.getUseCaseAccess().getPreconditionSTRINGTerminalRuleCall_9_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUseCaseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"precondition",
        		lv_precondition_14_0, 
        		"STRING");
	    }

)
))?(	otherlv_15='postcondition' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getUseCaseAccess().getPostconditionKeyword_10_0());
    }
(
(
		lv_postcondition_16_0=RULE_STRING
		{
			newLeafNode(lv_postcondition_16_0, grammarAccess.getUseCaseAccess().getPostconditionSTRINGTerminalRuleCall_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUseCaseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"postcondition",
        		lv_postcondition_16_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getUseCaseAccess().getActionsUCActionsParserRuleCall_11_0()); 
	    }
		lv_actions_17_0=ruleUCActions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUseCaseRule());
	        }
       		set(
       			$current, 
       			"actions",
        		lv_actions_17_0, 
        		"UCActions");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getUseCaseAccess().getExtensionPointsUCExtensionPointsParserRuleCall_12_0()); 
	    }
		lv_extensionPoints_18_0=ruleUCExtensionPoints		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUseCaseRule());
	        }
       		set(
       			$current, 
       			"extensionPoints",
        		lv_extensionPoints_18_0, 
        		"UCExtensionPoints");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getUseCaseAccess().getIncludesUCIncludesParserRuleCall_13_0()); 
	    }
		lv_includes_19_0=ruleUCIncludes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUseCaseRule());
	        }
       		set(
       			$current, 
       			"includes",
        		lv_includes_19_0, 
        		"UCIncludes");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getUseCaseAccess().getExtendsUCExtendsParserRuleCall_14_0()); 
	    }
		lv_extends_20_0=ruleUCExtends		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUseCaseRule());
	        }
       		add(
       			$current, 
       			"extends",
        		lv_extends_20_0, 
        		"UCExtends");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_21='stakeholder' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getUseCaseAccess().getStakeholderKeyword_15_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUseCaseRule());
	        }
        }
	otherlv_22=RULE_ID
	{
		newLeafNode(otherlv_22, grammarAccess.getUseCaseAccess().getStakeholderStakeholderCrossReference_15_1_0()); 
	}

)
))?(	otherlv_23='priority' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getUseCaseAccess().getPriorityKeyword_16_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUseCaseAccess().getPriorityPriorityParserRuleCall_16_1_0()); 
	    }
		lv_priority_24_0=rulePriority		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUseCaseRule());
	        }
       		set(
       			$current, 
       			"priority",
        		lv_priority_24_0, 
        		"Priority");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_25='progress' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getUseCaseAccess().getProgressKeyword_17_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUseCaseAccess().getProgressProgressParserRuleCall_17_1_0()); 
	    }
		lv_progress_26_0=ruleProgress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUseCaseRule());
	        }
       		set(
       			$current, 
       			"progress",
        		lv_progress_26_0, 
        		"Progress");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_27='description' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getUseCaseAccess().getDescriptionKeyword_18_0());
    }
(
(
		lv_description_28_0=RULE_STRING
		{
			newLeafNode(lv_description_28_0, grammarAccess.getUseCaseAccess().getDescriptionSTRINGTerminalRuleCall_18_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUseCaseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_28_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getUseCaseAccess().getScenariosScenarioParserRuleCall_19_0()); 
	    }
		lv_scenarios_29_0=ruleScenario		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUseCaseRule());
	        }
       		add(
       			$current, 
       			"scenarios",
        		lv_scenarios_29_0, 
        		"Scenario");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_30='}' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getUseCaseAccess().getRightCurlyBracketKeyword_20());
    }
)
;





// Entry rule entryRuleRefActor
entryRuleRefActor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefActorRule()); }
	 iv_ruleRefActor=ruleRefActor 
	 { $current=$iv_ruleRefActor.current; } 
	 EOF 
;

// Rule RefActor
ruleRefActor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefActorRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getRefActorAccess().getRefsActorCrossReference_0_0()); 
	}

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRefActorAccess().getCommaKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefActorRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getRefActorAccess().getRefsActorCrossReference_1_1_0()); 
	}

)
))*)
;





// Entry rule entryRuleUCActions
entryRuleUCActions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUCActionsRule()); }
	 iv_ruleUCActions=ruleUCActions 
	 { $current=$iv_ruleUCActions.current; } 
	 EOF 
;

// Rule UCActions
ruleUCActions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='actions' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUCActionsAccess().getActionsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUCActionsAccess().getActionsUCActionParserRuleCall_1_0()); 
	    }
		lv_actions_1_0=ruleUCAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUCActionsRule());
	        }
       		add(
       			$current, 
       			"actions",
        		lv_actions_1_0, 
        		"UCAction");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUCActionsAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUCActionsAccess().getActionsUCActionParserRuleCall_2_1_0()); 
	    }
		lv_actions_3_0=ruleUCAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUCActionsRule());
	        }
       		add(
       			$current, 
       			"actions",
        		lv_actions_3_0, 
        		"UCAction");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUCAction
entryRuleUCAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUCActionRule()); }
	 iv_ruleUCAction=ruleUCAction 
	 { $current=$iv_ruleUCAction.current; } 
	 EOF 
;

// Rule UCAction
ruleUCAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getUCActionAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUCActionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUCActionAccess().getLeftCurlyBracketKeyword_1_0());
    }
	otherlv_2='description' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUCActionAccess().getDescriptionKeyword_1_1());
    }
(
(
		lv_description_3_0=RULE_STRING
		{
			newLeafNode(lv_description_3_0, grammarAccess.getUCActionAccess().getDescriptionSTRINGTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUCActionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUCActionAccess().getRightCurlyBracketKeyword_1_3());
    }
)?)
;





// Entry rule entryRuleUCIncludes
entryRuleUCIncludes returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUCIncludesRule()); }
	 iv_ruleUCIncludes=ruleUCIncludes 
	 { $current=$iv_ruleUCIncludes.current; } 
	 EOF 
;

// Rule UCIncludes
ruleUCIncludes returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='includes' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUCIncludesAccess().getIncludesKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUCIncludesAccess().getIncludesRefUCParserRuleCall_1_0()); 
	    }
		lv_includes_1_0=ruleRefUC		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUCIncludesRule());
	        }
       		add(
       			$current, 
       			"includes",
        		lv_includes_1_0, 
        		"RefUC");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleUCExtends
entryRuleUCExtends returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUCExtendsRule()); }
	 iv_ruleUCExtends=ruleUCExtends 
	 { $current=$iv_ruleUCExtends.current; } 
	 EOF 
;

// Rule UCExtends
ruleUCExtends returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='extends' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUCExtendsAccess().getExtendsKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUCExtendsRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getUCExtendsAccess().getUsecaseUseCaseCrossReference_1_0()); 
	}

)
)	otherlv_2='onExtensionPoint' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUCExtendsAccess().getOnExtensionPointKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUCExtendsRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getUCExtendsAccess().getExtensionPointUCExtensionPointCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleUCExtensionPoints
entryRuleUCExtensionPoints returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUCExtensionPointsRule()); }
	 iv_ruleUCExtensionPoints=ruleUCExtensionPoints 
	 { $current=$iv_ruleUCExtensionPoints.current; } 
	 EOF 
;

// Rule UCExtensionPoints
ruleUCExtensionPoints returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='extensionPoints' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUCExtensionPointsAccess().getExtensionPointsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUCExtensionPointsAccess().getExtensionPointsUCExtensionPointParserRuleCall_1_0()); 
	    }
		lv_extensionPoints_1_0=ruleUCExtensionPoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUCExtensionPointsRule());
	        }
       		add(
       			$current, 
       			"extensionPoints",
        		lv_extensionPoints_1_0, 
        		"UCExtensionPoint");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUCExtensionPointsAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUCExtensionPointsAccess().getExtensionPointsUCExtensionPointParserRuleCall_2_1_0()); 
	    }
		lv_extensionPoints_3_0=ruleUCExtensionPoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUCExtensionPointsRule());
	        }
       		add(
       			$current, 
       			"extensionPoints",
        		lv_extensionPoints_3_0, 
        		"UCExtensionPoint");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUCExtensionPoint
entryRuleUCExtensionPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUCExtensionPointRule()); }
	 iv_ruleUCExtensionPoint=ruleUCExtensionPoint 
	 { $current=$iv_ruleUCExtensionPoint.current; } 
	 EOF 
;

// Rule UCExtensionPoint
ruleUCExtensionPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getUCExtensionPointAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUCExtensionPointRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUCExtensionPointAccess().getLeftCurlyBracketKeyword_1_0());
    }
	otherlv_2='description' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUCExtensionPointAccess().getDescriptionKeyword_1_1());
    }
(
(
		lv_description_3_0=RULE_STRING
		{
			newLeafNode(lv_description_3_0, grammarAccess.getUCExtensionPointAccess().getDescriptionSTRINGTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUCExtensionPointRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUCExtensionPointAccess().getRightCurlyBracketKeyword_1_3());
    }
)?)
;





// Entry rule entryRuleRefUC
entryRuleRefUC returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefUCRule()); }
	 iv_ruleRefUC=ruleRefUC 
	 { $current=$iv_ruleRefUC.current; } 
	 EOF 
;

// Rule RefUC
ruleRefUC returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefUCRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getRefUCAccess().getRefsUseCaseCrossReference_0_0()); 
	}

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRefUCAccess().getCommaKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefUCRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getRefUCAccess().getRefsUseCaseCrossReference_1_1_0()); 
	}

)
))*)
;





// Entry rule entryRuleScenario
entryRuleScenario returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScenarioRule()); }
	 iv_ruleScenario=ruleScenario 
	 { $current=$iv_ruleScenario.current; } 
	 EOF 
;

// Rule Scenario
ruleScenario returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='scenario' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScenarioAccess().getScenarioKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getScenarioAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScenarioRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getScenarioAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioAccess().getTypeScenarioTypeEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleScenarioType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"ScenarioType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getScenarioAccess().getLeftCurlyBracketKeyword_4());
    }
(	otherlv_5='name' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getScenarioAccess().getNameKeyword_5_0());
    }
(
(
		lv_nameAlias_6_0=RULE_STRING
		{
			newLeafNode(lv_nameAlias_6_0, grammarAccess.getScenarioAccess().getNameAliasSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScenarioRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameAlias",
        		lv_nameAlias_6_0, 
        		"STRING");
	    }

)
))(	otherlv_7='executionMode' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getScenarioAccess().getExecutionModeKeyword_6_0());
    }
(
(
(
		lv_mode_8_1=	'Sequential' 
    {
        newLeafNode(lv_mode_8_1, grammarAccess.getScenarioAccess().getModeSequentialKeyword_6_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScenarioRule());
	        }
       		setWithLastConsumed($current, "mode", lv_mode_8_1, null);
	    }

    |		lv_mode_8_2=	'Parallel' 
    {
        newLeafNode(lv_mode_8_2, grammarAccess.getScenarioAccess().getModeParallelKeyword_6_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScenarioRule());
	        }
       		setWithLastConsumed($current, "mode", lv_mode_8_2, null);
	    }

)

)
))?(	otherlv_9='description' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getScenarioAccess().getDescriptionKeyword_7_0());
    }
(
(
		lv_description_10_0=RULE_STRING
		{
			newLeafNode(lv_description_10_0, grammarAccess.getScenarioAccess().getDescriptionSTRINGTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScenarioRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_10_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioAccess().getStepsStepParserRuleCall_8_0()); 
	    }
		lv_steps_11_0=ruleStep		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioRule());
	        }
       		add(
       			$current, 
       			"steps",
        		lv_steps_11_0, 
        		"Step");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getScenarioAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleStep
entryRuleStep returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStepRule()); }
	 iv_ruleStep=ruleStep 
	 { $current=$iv_ruleStep.current; } 
	 EOF 
;

// Rule Step
ruleStep returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='step' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStepAccess().getStepKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStepAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStepRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStepAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStepAccess().getTypeStepOperationTypeEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleStepOperationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStepRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"StepOperationType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStepAccess().getColonKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStepAccess().getSubTypeStepOperationSubTypeEnumRuleCall_4_1_0()); 
	    }
		lv_subType_5_0=ruleStepOperationSubType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStepRule());
	        }
       		set(
       			$current, 
       			"subType",
        		lv_subType_5_0, 
        		"StepOperationSubType");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStepAccess().getLeftCurlyBracketKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getStepAccess().getSimpleStepSimpleStepParserRuleCall_6_0_0()); 
	    }
		lv_simpleStep_7_0=ruleSimpleStep		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStepRule());
	        }
       		set(
       			$current, 
       			"simpleStep",
        		lv_simpleStep_7_0, 
        		"SimpleStep");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStepAccess().getSubStepsStepParserRuleCall_6_1_0()); 
	    }
		lv_subSteps_8_0=ruleStep		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStepRule());
	        }
       		add(
       			$current, 
       			"subSteps",
        		lv_subSteps_8_0, 
        		"Step");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStepAccess().getIfStepsIfStepParserRuleCall_6_2_0()); 
	    }
		lv_ifSteps_9_0=ruleIfStep		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStepRule());
	        }
       		add(
       			$current, 
       			"ifSteps",
        		lv_ifSteps_9_0, 
        		"IfStep");
	        afterParserOrEnumRuleCall();
	    }

)
)*)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getStepAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleSimpleStep
entryRuleSimpleStep returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleStepRule()); }
	 iv_ruleSimpleStep=ruleSimpleStep 
	 { $current=$iv_ruleSimpleStep.current; } 
	 EOF 
;

// Rule SimpleStep
ruleSimpleStep returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_nameAlias_0_0=RULE_STRING
		{
			newLeafNode(lv_nameAlias_0_0, grammarAccess.getSimpleStepAccess().getNameAliasSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleStepRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameAlias",
        		lv_nameAlias_0_0, 
        		"STRING");
	    }

)
)(	otherlv_1='actor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSimpleStepAccess().getActorKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleStepRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getSimpleStepAccess().getActorActorCrossReference_1_1_0()); 
	}

)
))?(	otherlv_3='description' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSimpleStepAccess().getDescriptionKeyword_2_0());
    }
(
(
		lv_description_4_0=RULE_STRING
		{
			newLeafNode(lv_description_4_0, grammarAccess.getSimpleStepAccess().getDescriptionSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleStepRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_4_0, 
        		"STRING");
	    }

)
))?(	otherlv_5='precondition' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSimpleStepAccess().getPreconditionKeyword_3_0());
    }
(
(
		lv_precondition_6_0=RULE_STRING
		{
			newLeafNode(lv_precondition_6_0, grammarAccess.getSimpleStepAccess().getPreconditionSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleStepRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"precondition",
        		lv_precondition_6_0, 
        		"STRING");
	    }

)
))?(	otherlv_7='postcondition' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSimpleStepAccess().getPostconditionKeyword_4_0());
    }
(
(
		lv_postcondition_8_0=RULE_STRING
		{
			newLeafNode(lv_postcondition_8_0, grammarAccess.getSimpleStepAccess().getPostconditionSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleStepRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"postcondition",
        		lv_postcondition_8_0, 
        		"STRING");
	    }

)
))?(	otherlv_9='nextStep' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSimpleStepAccess().getNextStepKeyword_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleStepRule());
	        }
        }
	otherlv_10=RULE_ID
	{
		newLeafNode(otherlv_10, grammarAccess.getSimpleStepAccess().getNextStepCrossReference_5_1_0()); 
	}

)
))?)
;





// Entry rule entryRuleIfStep
entryRuleIfStep returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfStepRule()); }
	 iv_ruleIfStep=ruleIfStep 
	 { $current=$iv_ruleIfStep.current; } 
	 EOF 
;

// Rule IfStep
ruleIfStep returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='ifAction' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIfStepAccess().getIfActionKeyword_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfStepRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIfStepAccess().getActionUCActionCrossReference_0_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIfStepAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStepAccess().getStepsStepParserRuleCall_2_0()); 
	    }
		lv_steps_3_0=ruleStep		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStepRule());
	        }
       		add(
       			$current, 
       			"steps",
        		lv_steps_3_0, 
        		"Step");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIfStepAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleStateMachine
entryRuleStateMachine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateMachineRule()); }
	 iv_ruleStateMachine=ruleStateMachine 
	 { $current=$iv_ruleStateMachine.current; } 
	 EOF 
;

// Rule StateMachine
ruleStateMachine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='stateMachine' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStateMachineAccess().getStateMachineKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStateMachineAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMachineRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStateMachineAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getTypeStateMachineTypeEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleStateMachineType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"StateMachineType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_4());
    }
	otherlv_5='name' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStateMachineAccess().getNameKeyword_5());
    }
(
(
		lv_nameAlias_6_0=RULE_STRING
		{
			newLeafNode(lv_nameAlias_6_0, grammarAccess.getStateMachineAccess().getNameAliasSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMachineRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameAlias",
        		lv_nameAlias_6_0, 
        		"STRING");
	    }

)
)	otherlv_7='entity' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStateMachineAccess().getEntityKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMachineRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getStateMachineAccess().getEntityEntityCrossReference_8_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getStatesStatesParserRuleCall_9_0()); 
	    }
		lv_states_9_0=ruleStates		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		set(
       			$current, 
       			"states",
        		lv_states_9_0, 
        		"States");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10='description' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getStateMachineAccess().getDescriptionKeyword_10_0());
    }
(
(
		lv_description_11_0=RULE_STRING
		{
			newLeafNode(lv_description_11_0, grammarAccess.getStateMachineAccess().getDescriptionSTRINGTerminalRuleCall_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMachineRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_11_0, 
        		"STRING");
	    }

)
))?	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleStates
entryRuleStates returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatesRule()); }
	 iv_ruleStates=ruleStates 
	 { $current=$iv_ruleStates.current; } 
	 EOF 
;

// Rule States
ruleStates returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStatesAccess().getStateAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStatesAccess().getStatesStateParserRuleCall_1_0()); 
	    }
		lv_states_1_0=ruleState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatesRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_1_0, 
        		"State");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleState
entryRuleState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	 iv_ruleState=ruleState 
	 { $current=$iv_ruleState.current; } 
	 EOF 
;

// Rule State
ruleState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='state' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStateAccess().getStateKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		lv_isInitial_2_0=	'isInitial' 
    {
        newLeafNode(lv_isInitial_2_0, grammarAccess.getStateAccess().getIsInitialIsInitialKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
       		setWithLastConsumed($current, "isInitial", true, "isInitial");
	    }

)
)?(
(
		lv_isFinal_3_0=	'isFinal' 
    {
        newLeafNode(lv_isFinal_3_0, grammarAccess.getStateAccess().getIsFinalIsFinalKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
       		setWithLastConsumed($current, "isFinal", true, "isFinal");
	    }

)
)?(	otherlv_4='onEntry' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStateAccess().getOnEntryKeyword_4_0());
    }
(
(
		lv_onEntry_5_0=RULE_STRING
		{
			newLeafNode(lv_onEntry_5_0, grammarAccess.getStateAccess().getOnEntrySTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"onEntry",
        		lv_onEntry_5_0, 
        		"STRING");
	    }

)
))?(	otherlv_6='onExit' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStateAccess().getOnExitKeyword_5_0());
    }
(
(
		lv_onExit_7_0=RULE_STRING
		{
			newLeafNode(lv_onExit_7_0, grammarAccess.getStateAccess().getOnExitSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"onExit",
        		lv_onExit_7_0, 
        		"STRING");
	    }

)
))?(	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStateAccess().getColonKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_6_1_0()); 
	    }
		lv_transitions_9_0=ruleTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateRule());
	        }
       		add(
       			$current, 
       			"transitions",
        		lv_transitions_9_0, 
        		"Transition");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_7_0()); 
	    }
		lv_transitions_10_0=ruleTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateRule());
	        }
       		add(
       			$current, 
       			"transitions",
        		lv_transitions_10_0, 
        		"Transition");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	 iv_ruleTransition=ruleTransition 
	 { $current=$iv_ruleTransition.current; } 
	 EOF 
;

// Rule Transition
ruleTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTransitionAccess().getUcActionRefUCActionParserRuleCall_0_0()); 
	    }
		lv_ucAction_0_0=ruleRefUCAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransitionRule());
	        }
       		set(
       			$current, 
       			"ucAction",
        		lv_ucAction_0_0, 
        		"RefUCAction");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='nextState' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTransitionAccess().getNextStateKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getNextstateStateCrossReference_1_1_0()); 
	}

)
))?)
;





// Entry rule entryRuleRefUCAction
entryRuleRefUCAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefUCActionRule()); }
	 iv_ruleRefUCAction=ruleRefUCAction 
	 { $current=$iv_ruleRefUCAction.current; } 
	 EOF 
;

// Rule RefUCAction
ruleRefUCAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='useCase' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRefUCActionAccess().getUseCaseKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefUCActionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getRefUCActionAccess().getUseCaseUseCaseCrossReference_1_0()); 
	}

)
)	otherlv_2='action' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRefUCActionAccess().getActionKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefUCActionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRefUCActionAccess().getActionUCActionCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Rule ProjectType
ruleProjectType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Development' 
	{
        $current = grammarAccess.getProjectTypeAccess().getDevelopmentEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getProjectTypeAccess().getDevelopmentEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Design' 
	{
        $current = grammarAccess.getProjectTypeAccess().getDesignEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getProjectTypeAccess().getDesignEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Deployment' 
	{
        $current = grammarAccess.getProjectTypeAccess().getDeploymentEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getProjectTypeAccess().getDeploymentEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Maintenance' 
	{
        $current = grammarAccess.getProjectTypeAccess().getMaintenanceEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getProjectTypeAccess().getMaintenanceEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='Auditing' 
	{
        $current = grammarAccess.getProjectTypeAccess().getAuditingEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getProjectTypeAccess().getAuditingEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='Training' 
	{
        $current = grammarAccess.getProjectTypeAccess().getTrainingEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getProjectTypeAccess().getTrainingEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='Research' 
	{
        $current = grammarAccess.getProjectTypeAccess().getResearchEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getProjectTypeAccess().getResearchEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='Other' 
	{
        $current = grammarAccess.getProjectTypeAccess().getOtherEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getProjectTypeAccess().getOtherEnumLiteralDeclaration_7()); 
    }
));



// Rule ProjectDomain
ruleProjectDomain returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='PublicSector' 
	{
        $current = grammarAccess.getProjectDomainAccess().getPublicSectorEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getProjectDomainAccess().getPublicSectorEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Education' 
	{
        $current = grammarAccess.getProjectDomainAccess().getEducationEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getProjectDomainAccess().getEducationEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Health' 
	{
        $current = grammarAccess.getProjectDomainAccess().getHealthEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getProjectDomainAccess().getHealthEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Telecoms' 
	{
        $current = grammarAccess.getProjectDomainAccess().getTelecomsEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getProjectDomainAccess().getTelecomsEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='EnergyAndUtilities' 
	{
        $current = grammarAccess.getProjectDomainAccess().getEnergyAndUtilitiesEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getProjectDomainAccess().getEnergyAndUtilitiesEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='FinanceAndBanks' 
	{
        $current = grammarAccess.getProjectDomainAccess().getFinanceAndBanksEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getProjectDomainAccess().getFinanceAndBanksEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='Other' 
	{
        $current = grammarAccess.getProjectDomainAccess().getOtherEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getProjectDomainAccess().getOtherEnumLiteralDeclaration_6()); 
    }
));



// Rule TermType
ruleTermType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Adjective' 
	{
        $current = grammarAccess.getTermTypeAccess().getAdjectiveEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getTermTypeAccess().getAdjectiveEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Adverb' 
	{
        $current = grammarAccess.getTermTypeAccess().getAdverbEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getTermTypeAccess().getAdverbEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Noun' 
	{
        $current = grammarAccess.getTermTypeAccess().getNounEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getTermTypeAccess().getNounEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Verb' 
	{
        $current = grammarAccess.getTermTypeAccess().getVerbEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getTermTypeAccess().getVerbEnumLiteralDeclaration_3()); 
    }
));



// Rule StakeholderType
ruleStakeholderType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Organization' 
	{
        $current = grammarAccess.getStakeholderTypeAccess().getOrganizationEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getStakeholderTypeAccess().getOrganizationEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='BusinessUnit' 
	{
        $current = grammarAccess.getStakeholderTypeAccess().getBusinessUnitEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getStakeholderTypeAccess().getBusinessUnitEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Team' 
	{
        $current = grammarAccess.getStakeholderTypeAccess().getTeamEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getStakeholderTypeAccess().getTeamEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Person' 
	{
        $current = grammarAccess.getStakeholderTypeAccess().getPersonEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getStakeholderTypeAccess().getPersonEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='ExternalSystem' 
	{
        $current = grammarAccess.getStakeholderTypeAccess().getExternalSystemEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getStakeholderTypeAccess().getExternalSystemEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='Other' 
	{
        $current = grammarAccess.getStakeholderTypeAccess().getOtherEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getStakeholderTypeAccess().getOtherEnumLiteralDeclaration_5()); 
    }
));



// Rule StakeholderCategory
ruleStakeholderCategory returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Business' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getBusinessEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getStakeholderCategoryAccess().getBusinessEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Business_Customer' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getBusiness_CustomerEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getStakeholderCategoryAccess().getBusiness_CustomerEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Business_Sponsor' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getBusiness_SponsorEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getStakeholderCategoryAccess().getBusiness_SponsorEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Business_User' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getBusiness_UserEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getStakeholderCategoryAccess().getBusiness_UserEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='Business_User_Direct' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getBusiness_User_DirectEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getStakeholderCategoryAccess().getBusiness_User_DirectEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='Business_User_Indirect' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getBusiness_User_IndirectEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getStakeholderCategoryAccess().getBusiness_User_IndirectEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='Business_Advisor' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getBusiness_AdvisorEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getStakeholderCategoryAccess().getBusiness_AdvisorEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='Business_DomainExpert' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getBusiness_DomainExpertEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getStakeholderCategoryAccess().getBusiness_DomainExpertEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='Business_Government' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getBusiness_GovernmentEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getStakeholderCategoryAccess().getBusiness_GovernmentEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='Business_RegulatorAgent' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getBusiness_RegulatorAgentEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getStakeholderCategoryAccess().getBusiness_RegulatorAgentEnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='Business_Other' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getBusiness_OtherEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getStakeholderCategoryAccess().getBusiness_OtherEnumLiteralDeclaration_10()); 
    }
)
    |(	enumLiteral_11='Manager' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getManagerEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_11, grammarAccess.getStakeholderCategoryAccess().getManagerEnumLiteralDeclaration_11()); 
    }
)
    |(	enumLiteral_12='Manager_ProjectManager' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getManager_ProjectManagerEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_12, grammarAccess.getStakeholderCategoryAccess().getManager_ProjectManagerEnumLiteralDeclaration_12()); 
    }
)
    |(	enumLiteral_13='Manager_TeamManager' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getManager_TeamManagerEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_13, grammarAccess.getStakeholderCategoryAccess().getManager_TeamManagerEnumLiteralDeclaration_13()); 
    }
)
    |(	enumLiteral_14='Manager_FunctionalManager' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getManager_FunctionalManagerEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_14, grammarAccess.getStakeholderCategoryAccess().getManager_FunctionalManagerEnumLiteralDeclaration_14()); 
    }
)
    |(	enumLiteral_15='Manager_Other' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getManager_OtherEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_15, grammarAccess.getStakeholderCategoryAccess().getManager_OtherEnumLiteralDeclaration_15()); 
    }
)
    |(	enumLiteral_16='Technical' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getTechnicalEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_16, grammarAccess.getStakeholderCategoryAccess().getTechnicalEnumLiteralDeclaration_16()); 
    }
)
    |(	enumLiteral_17='Technical_BusinessAnalyst' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getTechnical_BusinessAnalystEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_17, grammarAccess.getStakeholderCategoryAccess().getTechnical_BusinessAnalystEnumLiteralDeclaration_17()); 
    }
)
    |(	enumLiteral_18='Technical_RequirementsEngineer' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getTechnical_RequirementsEngineerEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_18, grammarAccess.getStakeholderCategoryAccess().getTechnical_RequirementsEngineerEnumLiteralDeclaration_18()); 
    }
)
    |(	enumLiteral_19='Technical_Trainer' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getTechnical_TrainerEnumLiteralDeclaration_19().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_19, grammarAccess.getStakeholderCategoryAccess().getTechnical_TrainerEnumLiteralDeclaration_19()); 
    }
)
    |(	enumLiteral_20='Technical_SoftwareArchitect' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getTechnical_SoftwareArchitectEnumLiteralDeclaration_20().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_20, grammarAccess.getStakeholderCategoryAccess().getTechnical_SoftwareArchitectEnumLiteralDeclaration_20()); 
    }
)
    |(	enumLiteral_21='Technical_SoftwareDesigner' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getTechnical_SoftwareDesignerEnumLiteralDeclaration_21().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_21, grammarAccess.getStakeholderCategoryAccess().getTechnical_SoftwareDesignerEnumLiteralDeclaration_21()); 
    }
)
    |(	enumLiteral_22='Technical_SoftwareTester' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getTechnical_SoftwareTesterEnumLiteralDeclaration_22().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_22, grammarAccess.getStakeholderCategoryAccess().getTechnical_SoftwareTesterEnumLiteralDeclaration_22()); 
    }
)
    |(	enumLiteral_23='Technical_Other' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getTechnical_OtherEnumLiteralDeclaration_23().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_23, grammarAccess.getStakeholderCategoryAccess().getTechnical_OtherEnumLiteralDeclaration_23()); 
    }
)
    |(	enumLiteral_24='ExternalSystem' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getExternalSystemEnumLiteralDeclaration_24().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_24, grammarAccess.getStakeholderCategoryAccess().getExternalSystemEnumLiteralDeclaration_24()); 
    }
)
    |(	enumLiteral_25='Other' 
	{
        $current = grammarAccess.getStakeholderCategoryAccess().getOtherEnumLiteralDeclaration_25().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_25, grammarAccess.getStakeholderCategoryAccess().getOtherEnumLiteralDeclaration_25()); 
    }
));



// Rule SystemType
ruleSystemType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='System' 
	{
        $current = grammarAccess.getSystemTypeAccess().getSystemEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSystemTypeAccess().getSystemEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='SubSystem' 
	{
        $current = grammarAccess.getSystemTypeAccess().getSubSystemEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSystemTypeAccess().getSubSystemEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='ReusableSystem' 
	{
        $current = grammarAccess.getSystemTypeAccess().getReusableSystemEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getSystemTypeAccess().getReusableSystemEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Other' 
	{
        $current = grammarAccess.getSystemTypeAccess().getOtherEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getSystemTypeAccess().getOtherEnumLiteralDeclaration_3()); 
    }
));



// Rule SystemScope
ruleSystemScope returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='In' 
	{
        $current = grammarAccess.getSystemScopeAccess().getInEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSystemScopeAccess().getInEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Out' 
	{
        $current = grammarAccess.getSystemScopeAccess().getOutEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSystemScopeAccess().getOutEnumLiteralDeclaration_1()); 
    }
));



// Rule SystemRelationType
ruleSystemRelationType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='In' 
	{
        $current = grammarAccess.getSystemRelationTypeAccess().getInEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSystemRelationTypeAccess().getInEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Out' 
	{
        $current = grammarAccess.getSystemRelationTypeAccess().getOutEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSystemRelationTypeAccess().getOutEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='In_Out' 
	{
        $current = grammarAccess.getSystemRelationTypeAccess().getIn_OutEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getSystemRelationTypeAccess().getIn_OutEnumLiteralDeclaration_2()); 
    }
));



// Rule SystemRelationCategory
ruleSystemRelationCategory returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Import' 
	{
        $current = grammarAccess.getSystemRelationCategoryAccess().getImportEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSystemRelationCategoryAccess().getImportEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Export' 
	{
        $current = grammarAccess.getSystemRelationCategoryAccess().getExportEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSystemRelationCategoryAccess().getExportEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='ImportExport' 
	{
        $current = grammarAccess.getSystemRelationCategoryAccess().getImportExportEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getSystemRelationCategoryAccess().getImportExportEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Sync' 
	{
        $current = grammarAccess.getSystemRelationCategoryAccess().getSyncEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getSystemRelationCategoryAccess().getSyncEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='Interact' 
	{
        $current = grammarAccess.getSystemRelationCategoryAccess().getInteractEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getSystemRelationCategoryAccess().getInteractEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='Other' 
	{
        $current = grammarAccess.getSystemRelationCategoryAccess().getOtherEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getSystemRelationCategoryAccess().getOtherEnumLiteralDeclaration_5()); 
    }
));



// Rule EntityType
ruleEntityType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Principal' 
	{
        $current = grammarAccess.getEntityTypeAccess().getPrincipalEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getEntityTypeAccess().getPrincipalEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Secondary' 
	{
        $current = grammarAccess.getEntityTypeAccess().getSecondaryEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getEntityTypeAccess().getSecondaryEnumLiteralDeclaration_1()); 
    }
));



// Rule AttributeType
ruleAttributeType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Integer' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getIntegerEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAttributeTypeAccess().getIntegerEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Decimal' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getDecimalEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getAttributeTypeAccess().getDecimalEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Boolean' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getBooleanEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getAttributeTypeAccess().getBooleanEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Currency' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getCurrencyEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getAttributeTypeAccess().getCurrencyEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='Date' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getDateEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getAttributeTypeAccess().getDateEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='Time' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getTimeEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getAttributeTypeAccess().getTimeEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='Datetime' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getDatetimeEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getAttributeTypeAccess().getDatetimeEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='String' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getStringEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getAttributeTypeAccess().getStringEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='Text' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getTextEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getAttributeTypeAccess().getTextEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='Regex' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getRegexEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getAttributeTypeAccess().getRegexEnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='URL' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getURLEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getAttributeTypeAccess().getURLEnumLiteralDeclaration_10()); 
    }
)
    |(	enumLiteral_11='Image' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getImageEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_11, grammarAccess.getAttributeTypeAccess().getImageEnumLiteralDeclaration_11()); 
    }
)
    |(	enumLiteral_12='XML' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getXMLEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_12, grammarAccess.getAttributeTypeAccess().getXMLEnumLiteralDeclaration_12()); 
    }
)
    |(	enumLiteral_13='Binary' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getBinaryEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_13, grammarAccess.getAttributeTypeAccess().getBinaryEnumLiteralDeclaration_13()); 
    }
));



// Rule BusinessEntityType
ruleBusinessEntityType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='VerySimple' 
	{
        $current = grammarAccess.getBusinessEntityTypeAccess().getVerySimpleEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getBusinessEntityTypeAccess().getVerySimpleEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Simple' 
	{
        $current = grammarAccess.getBusinessEntityTypeAccess().getSimpleEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getBusinessEntityTypeAccess().getSimpleEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Complex' 
	{
        $current = grammarAccess.getBusinessEntityTypeAccess().getComplexEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getBusinessEntityTypeAccess().getComplexEnumLiteralDeclaration_2()); 
    }
));



// Rule ActorType
ruleActorType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='User' 
	{
        $current = grammarAccess.getActorTypeAccess().getUserEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getActorTypeAccess().getUserEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='ExternalSystem' 
	{
        $current = grammarAccess.getActorTypeAccess().getExternalSystemEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getActorTypeAccess().getExternalSystemEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Timer' 
	{
        $current = grammarAccess.getActorTypeAccess().getTimerEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getActorTypeAccess().getTimerEnumLiteralDeclaration_2()); 
    }
));



// Rule RequirementRelationType
ruleRequirementRelationType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Requires' 
	{
        $current = grammarAccess.getRequirementRelationTypeAccess().getRequiresEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getRequirementRelationTypeAccess().getRequiresEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Supports' 
	{
        $current = grammarAccess.getRequirementRelationTypeAccess().getSupportsEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getRequirementRelationTypeAccess().getSupportsEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Obstructs' 
	{
        $current = grammarAccess.getRequirementRelationTypeAccess().getObstructsEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getRequirementRelationTypeAccess().getObstructsEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Conflicts' 
	{
        $current = grammarAccess.getRequirementRelationTypeAccess().getConflictsEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getRequirementRelationTypeAccess().getConflictsEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='Identical' 
	{
        $current = grammarAccess.getRequirementRelationTypeAccess().getIdenticalEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getRequirementRelationTypeAccess().getIdenticalEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='Relates' 
	{
        $current = grammarAccess.getRequirementRelationTypeAccess().getRelatesEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getRequirementRelationTypeAccess().getRelatesEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='Other' 
	{
        $current = grammarAccess.getRequirementRelationTypeAccess().getOtherEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getRequirementRelationTypeAccess().getOtherEnumLiteralDeclaration_6()); 
    }
));



// Rule GoalType
ruleGoalType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Abstract' 
	{
        $current = grammarAccess.getGoalTypeAccess().getAbstractEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getGoalTypeAccess().getAbstractEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Concrete' 
	{
        $current = grammarAccess.getGoalTypeAccess().getConcreteEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getGoalTypeAccess().getConcreteEnumLiteralDeclaration_1()); 
    }
));



// Rule FRType
ruleFRType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Functional' 
	{
        $current = grammarAccess.getFRTypeAccess().getFunctionalEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getFRTypeAccess().getFunctionalEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Behavioral' 
	{
        $current = grammarAccess.getFRTypeAccess().getBehavioralEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getFRTypeAccess().getBehavioralEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Data' 
	{
        $current = grammarAccess.getFRTypeAccess().getDataEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getFRTypeAccess().getDataEnumLiteralDeclaration_2()); 
    }
));



// Rule QRType
ruleQRType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Security' 
	{
        $current = grammarAccess.getQRTypeAccess().getSecurityEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getQRTypeAccess().getSecurityEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Performance' 
	{
        $current = grammarAccess.getQRTypeAccess().getPerformanceEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getQRTypeAccess().getPerformanceEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Usability' 
	{
        $current = grammarAccess.getQRTypeAccess().getUsabilityEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getQRTypeAccess().getUsabilityEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Appearance' 
	{
        $current = grammarAccess.getQRTypeAccess().getAppearanceEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getQRTypeAccess().getAppearanceEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='Operational' 
	{
        $current = grammarAccess.getQRTypeAccess().getOperationalEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getQRTypeAccess().getOperationalEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='Maintenance' 
	{
        $current = grammarAccess.getQRTypeAccess().getMaintenanceEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getQRTypeAccess().getMaintenanceEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='Cultural' 
	{
        $current = grammarAccess.getQRTypeAccess().getCulturalEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getQRTypeAccess().getCulturalEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='Legal' 
	{
        $current = grammarAccess.getQRTypeAccess().getLegalEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getQRTypeAccess().getLegalEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='Efficiency' 
	{
        $current = grammarAccess.getQRTypeAccess().getEfficiencyEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getQRTypeAccess().getEfficiencyEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='Reliability' 
	{
        $current = grammarAccess.getQRTypeAccess().getReliabilityEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getQRTypeAccess().getReliabilityEnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='Interoperability' 
	{
        $current = grammarAccess.getQRTypeAccess().getInteroperabilityEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getQRTypeAccess().getInteroperabilityEnumLiteralDeclaration_10()); 
    }
));



// Rule QRSubType
ruleQRSubType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Security_Privacy' 
	{
        $current = grammarAccess.getQRSubTypeAccess().getSecurity_PrivacyEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getQRSubTypeAccess().getSecurity_PrivacyEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Security_Integrity' 
	{
        $current = grammarAccess.getQRSubTypeAccess().getSecurity_IntegrityEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getQRSubTypeAccess().getSecurity_IntegrityEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Usability_EaseOfUse' 
	{
        $current = grammarAccess.getQRSubTypeAccess().getUsability_EaseOfUseEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getQRSubTypeAccess().getUsability_EaseOfUseEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Usability_EaseOfLearn' 
	{
        $current = grammarAccess.getQRSubTypeAccess().getUsability_EaseOfLearnEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getQRSubTypeAccess().getUsability_EaseOfLearnEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='Usability_Accessibility' 
	{
        $current = grammarAccess.getQRSubTypeAccess().getUsability_AccessibilityEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getQRSubTypeAccess().getUsability_AccessibilityEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='Usability_Understandability' 
	{
        $current = grammarAccess.getQRSubTypeAccess().getUsability_UnderstandabilityEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getQRSubTypeAccess().getUsability_UnderstandabilityEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='Usability_Learnability' 
	{
        $current = grammarAccess.getQRSubTypeAccess().getUsability_LearnabilityEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getQRSubTypeAccess().getUsability_LearnabilityEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='Usability_Attractiveness' 
	{
        $current = grammarAccess.getQRSubTypeAccess().getUsability_AttractivenessEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getQRSubTypeAccess().getUsability_AttractivenessEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='Efficiency_ResourceUse' 
	{
        $current = grammarAccess.getQRSubTypeAccess().getEfficiency_ResourceUseEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getQRSubTypeAccess().getEfficiency_ResourceUseEnumLiteralDeclaration_8()); 
    }
));



// Rule Metric
ruleMetric returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Time_Day' 
	{
        $current = grammarAccess.getMetricAccess().getTime_DayEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getMetricAccess().getTime_DayEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Time_Hour' 
	{
        $current = grammarAccess.getMetricAccess().getTime_HourEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getMetricAccess().getTime_HourEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Time_Min' 
	{
        $current = grammarAccess.getMetricAccess().getTime_MinEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getMetricAccess().getTime_MinEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Time_Sec' 
	{
        $current = grammarAccess.getMetricAccess().getTime_SecEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getMetricAccess().getTime_SecEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='Time_mSec' 
	{
        $current = grammarAccess.getMetricAccess().getTime_mSecEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getMetricAccess().getTime_mSecEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='Frequency_Hz' 
	{
        $current = grammarAccess.getMetricAccess().getFrequency_HzEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getMetricAccess().getFrequency_HzEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='Frequency_KHz' 
	{
        $current = grammarAccess.getMetricAccess().getFrequency_KHzEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getMetricAccess().getFrequency_KHzEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='Frequency_MHz' 
	{
        $current = grammarAccess.getMetricAccess().getFrequency_MHzEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getMetricAccess().getFrequency_MHzEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='Capacity_KByte' 
	{
        $current = grammarAccess.getMetricAccess().getCapacity_KByteEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getMetricAccess().getCapacity_KByteEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='Capacity_MByte' 
	{
        $current = grammarAccess.getMetricAccess().getCapacity_MByteEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getMetricAccess().getCapacity_MByteEnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='Capacity_GByte' 
	{
        $current = grammarAccess.getMetricAccess().getCapacity_GByteEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getMetricAccess().getCapacity_GByteEnumLiteralDeclaration_10()); 
    }
)
    |(	enumLiteral_11='Capacity_TByte' 
	{
        $current = grammarAccess.getMetricAccess().getCapacity_TByteEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_11, grammarAccess.getMetricAccess().getCapacity_TByteEnumLiteralDeclaration_11()); 
    }
)
    |(	enumLiteral_12='Task' 
	{
        $current = grammarAccess.getMetricAccess().getTaskEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_12, grammarAccess.getMetricAccess().getTaskEnumLiteralDeclaration_12()); 
    }
)
    |(	enumLiteral_13='Other' 
	{
        $current = grammarAccess.getMetricAccess().getOtherEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_13, grammarAccess.getMetricAccess().getOtherEnumLiteralDeclaration_13()); 
    }
));



// Rule ConstraintType
ruleConstraintType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Cultural' 
	{
        $current = grammarAccess.getConstraintTypeAccess().getCulturalEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getConstraintTypeAccess().getCulturalEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Legal' 
	{
        $current = grammarAccess.getConstraintTypeAccess().getLegalEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getConstraintTypeAccess().getLegalEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Organizational' 
	{
        $current = grammarAccess.getConstraintTypeAccess().getOrganizationalEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getConstraintTypeAccess().getOrganizationalEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Project' 
	{
        $current = grammarAccess.getConstraintTypeAccess().getProjectEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getConstraintTypeAccess().getProjectEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='Technological' 
	{
        $current = grammarAccess.getConstraintTypeAccess().getTechnologicalEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getConstraintTypeAccess().getTechnologicalEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='Physical' 
	{
        $current = grammarAccess.getConstraintTypeAccess().getPhysicalEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getConstraintTypeAccess().getPhysicalEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='Other' 
	{
        $current = grammarAccess.getConstraintTypeAccess().getOtherEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getConstraintTypeAccess().getOtherEnumLiteralDeclaration_6()); 
    }
));



// Rule ConstraintSubType
ruleConstraintSubType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Cultural_Language' 
	{
        $current = grammarAccess.getConstraintSubTypeAccess().getCultural_LanguageEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getConstraintSubTypeAccess().getCultural_LanguageEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Cultural_Other' 
	{
        $current = grammarAccess.getConstraintSubTypeAccess().getCultural_OtherEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getConstraintSubTypeAccess().getCultural_OtherEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Legal_National' 
	{
        $current = grammarAccess.getConstraintSubTypeAccess().getLegal_NationalEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getConstraintSubTypeAccess().getLegal_NationalEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Legal_International' 
	{
        $current = grammarAccess.getConstraintSubTypeAccess().getLegal_InternationalEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getConstraintSubTypeAccess().getLegal_InternationalEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='Legal_Other' 
	{
        $current = grammarAccess.getConstraintSubTypeAccess().getLegal_OtherEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getConstraintSubTypeAccess().getLegal_OtherEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='Organizational_Politics' 
	{
        $current = grammarAccess.getConstraintSubTypeAccess().getOrganizational_PoliticsEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getConstraintSubTypeAccess().getOrganizational_PoliticsEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='Organizational_Management' 
	{
        $current = grammarAccess.getConstraintSubTypeAccess().getOrganizational_ManagementEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getConstraintSubTypeAccess().getOrganizational_ManagementEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='Organizational_Other' 
	{
        $current = grammarAccess.getConstraintSubTypeAccess().getOrganizational_OtherEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getConstraintSubTypeAccess().getOrganizational_OtherEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='Project_Cost' 
	{
        $current = grammarAccess.getConstraintSubTypeAccess().getProject_CostEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getConstraintSubTypeAccess().getProject_CostEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='Project_Time' 
	{
        $current = grammarAccess.getConstraintSubTypeAccess().getProject_TimeEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getConstraintSubTypeAccess().getProject_TimeEnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='Project_Scope' 
	{
        $current = grammarAccess.getConstraintSubTypeAccess().getProject_ScopeEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getConstraintSubTypeAccess().getProject_ScopeEnumLiteralDeclaration_10()); 
    }
)
    |(	enumLiteral_11='Project_Quality' 
	{
        $current = grammarAccess.getConstraintSubTypeAccess().getProject_QualityEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_11, grammarAccess.getConstraintSubTypeAccess().getProject_QualityEnumLiteralDeclaration_11()); 
    }
)
    |(	enumLiteral_12='Project_Risk' 
	{
        $current = grammarAccess.getConstraintSubTypeAccess().getProject_RiskEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_12, grammarAccess.getConstraintSubTypeAccess().getProject_RiskEnumLiteralDeclaration_12()); 
    }
)
    |(	enumLiteral_13='Technological_PlatformHardware' 
	{
        $current = grammarAccess.getConstraintSubTypeAccess().getTechnological_PlatformHardwareEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_13, grammarAccess.getConstraintSubTypeAccess().getTechnological_PlatformHardwareEnumLiteralDeclaration_13()); 
    }
)
    |(	enumLiteral_14='Technological_PlatformSoftware' 
	{
        $current = grammarAccess.getConstraintSubTypeAccess().getTechnological_PlatformSoftwareEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_14, grammarAccess.getConstraintSubTypeAccess().getTechnological_PlatformSoftwareEnumLiteralDeclaration_14()); 
    }
)
    |(	enumLiteral_15='Technological_DevelopmentTool' 
	{
        $current = grammarAccess.getConstraintSubTypeAccess().getTechnological_DevelopmentToolEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_15, grammarAccess.getConstraintSubTypeAccess().getTechnological_DevelopmentToolEnumLiteralDeclaration_15()); 
    }
)
    |(	enumLiteral_16='Physical_Concrete' 
	{
        $current = grammarAccess.getConstraintSubTypeAccess().getPhysical_ConcreteEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_16, grammarAccess.getConstraintSubTypeAccess().getPhysical_ConcreteEnumLiteralDeclaration_16()); 
    }
)
    |(	enumLiteral_17='Physical_Abstract' 
	{
        $current = grammarAccess.getConstraintSubTypeAccess().getPhysical_AbstractEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_17, grammarAccess.getConstraintSubTypeAccess().getPhysical_AbstractEnumLiteralDeclaration_17()); 
    }
)
    |(	enumLiteral_18='Other_Other' 
	{
        $current = grammarAccess.getConstraintSubTypeAccess().getOther_OtherEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_18, grammarAccess.getConstraintSubTypeAccess().getOther_OtherEnumLiteralDeclaration_18()); 
    }
));



// Rule UseCaseType
ruleUseCaseType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='EntityCreate' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntityCreateEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getUseCaseTypeAccess().getEntityCreateEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='EntityRead' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntityReadEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getUseCaseTypeAccess().getEntityReadEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='EntityUpdate' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntityUpdateEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getUseCaseTypeAccess().getEntityUpdateEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='EntityDelete' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntityDeleteEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getUseCaseTypeAccess().getEntityDeleteEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='EntityReport' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntityReportEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getUseCaseTypeAccess().getEntityReportEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='EntityDashboard' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntityDashboardEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getUseCaseTypeAccess().getEntityDashboardEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='EntityOther' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntityOtherEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getUseCaseTypeAccess().getEntityOtherEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='EntitiesManage' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntitiesManageEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getUseCaseTypeAccess().getEntitiesManageEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='EntitiesBrowse' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntitiesBrowseEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getUseCaseTypeAccess().getEntitiesBrowseEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='EntitiesSearch' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntitiesSearchEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getUseCaseTypeAccess().getEntitiesSearchEnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='EntitiesReport' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntitiesReportEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getUseCaseTypeAccess().getEntitiesReportEnumLiteralDeclaration_10()); 
    }
)
    |(	enumLiteral_11='EntitiesDashboard' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntitiesDashboardEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_11, grammarAccess.getUseCaseTypeAccess().getEntitiesDashboardEnumLiteralDeclaration_11()); 
    }
)
    |(	enumLiteral_12='EntitiesInteropImport' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntitiesInteropImportEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_12, grammarAccess.getUseCaseTypeAccess().getEntitiesInteropImportEnumLiteralDeclaration_12()); 
    }
)
    |(	enumLiteral_13='EntitiesInteropExport' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntitiesInteropExportEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_13, grammarAccess.getUseCaseTypeAccess().getEntitiesInteropExportEnumLiteralDeclaration_13()); 
    }
)
    |(	enumLiteral_14='EntitiesInteropSync' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntitiesInteropSyncEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_14, grammarAccess.getUseCaseTypeAccess().getEntitiesInteropSyncEnumLiteralDeclaration_14()); 
    }
)
    |(	enumLiteral_15='EntitiesInteropSendMessage' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntitiesInteropSendMessageEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_15, grammarAccess.getUseCaseTypeAccess().getEntitiesInteropSendMessageEnumLiteralDeclaration_15()); 
    }
)
    |(	enumLiteral_16='EntitiesInteropServiceInvocation' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntitiesInteropServiceInvocationEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_16, grammarAccess.getUseCaseTypeAccess().getEntitiesInteropServiceInvocationEnumLiteralDeclaration_16()); 
    }
)
    |(	enumLiteral_17='EntitiesMapShow' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntitiesMapShowEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_17, grammarAccess.getUseCaseTypeAccess().getEntitiesMapShowEnumLiteralDeclaration_17()); 
    }
)
    |(	enumLiteral_18='EntitiesMapInteract' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntitiesMapInteractEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_18, grammarAccess.getUseCaseTypeAccess().getEntitiesMapInteractEnumLiteralDeclaration_18()); 
    }
)
    |(	enumLiteral_19='EntitiesOther' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getEntitiesOtherEnumLiteralDeclaration_19().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_19, grammarAccess.getUseCaseTypeAccess().getEntitiesOtherEnumLiteralDeclaration_19()); 
    }
)
    |(	enumLiteral_20='Other' 
	{
        $current = grammarAccess.getUseCaseTypeAccess().getOtherEnumLiteralDeclaration_20().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_20, grammarAccess.getUseCaseTypeAccess().getOtherEnumLiteralDeclaration_20()); 
    }
));



// Rule ScenarioType
ruleScenarioType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Main' 
	{
        $current = grammarAccess.getScenarioTypeAccess().getMainEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getScenarioTypeAccess().getMainEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Alternative' 
	{
        $current = grammarAccess.getScenarioTypeAccess().getAlternativeEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getScenarioTypeAccess().getAlternativeEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Exception' 
	{
        $current = grammarAccess.getScenarioTypeAccess().getExceptionEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getScenarioTypeAccess().getExceptionEnumLiteralDeclaration_2()); 
    }
));



// Rule StepOperationType
ruleStepOperationType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Actor_PrepareData' 
	{
        $current = grammarAccess.getStepOperationTypeAccess().getActor_PrepareDataEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getStepOperationTypeAccess().getActor_PrepareDataEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Actor_CallSystem' 
	{
        $current = grammarAccess.getStepOperationTypeAccess().getActor_CallSystemEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getStepOperationTypeAccess().getActor_CallSystemEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='System_Executes' 
	{
        $current = grammarAccess.getStepOperationTypeAccess().getSystem_ExecutesEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getStepOperationTypeAccess().getSystem_ExecutesEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='System_ReturnResult' 
	{
        $current = grammarAccess.getStepOperationTypeAccess().getSystem_ReturnResultEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getStepOperationTypeAccess().getSystem_ReturnResultEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='Other' 
	{
        $current = grammarAccess.getStepOperationTypeAccess().getOtherEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getStepOperationTypeAccess().getOtherEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='None' 
	{
        $current = grammarAccess.getStepOperationTypeAccess().getNoneEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getStepOperationTypeAccess().getNoneEnumLiteralDeclaration_5()); 
    }
));



// Rule StepOperationSubType
ruleStepOperationSubType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='SubmitData' 
	{
        $current = grammarAccess.getStepOperationSubTypeAccess().getSubmitDataEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getStepOperationSubTypeAccess().getSubmitDataEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='ShowData' 
	{
        $current = grammarAccess.getStepOperationSubTypeAccess().getShowDataEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getStepOperationSubTypeAccess().getShowDataEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='CancelUseCase' 
	{
        $current = grammarAccess.getStepOperationSubTypeAccess().getCancelUseCaseEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getStepOperationSubTypeAccess().getCancelUseCaseEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='TerminateUseCase' 
	{
        $current = grammarAccess.getStepOperationSubTypeAccess().getTerminateUseCaseEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getStepOperationSubTypeAccess().getTerminateUseCaseEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='Other' 
	{
        $current = grammarAccess.getStepOperationSubTypeAccess().getOtherEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getStepOperationSubTypeAccess().getOtherEnumLiteralDeclaration_4()); 
    }
));



// Rule StateMachineType
ruleStateMachineType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Simple' 
	{
        $current = grammarAccess.getStateMachineTypeAccess().getSimpleEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getStateMachineTypeAccess().getSimpleEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Complex' 
	{
        $current = grammarAccess.getStateMachineTypeAccess().getComplexEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getStateMachineTypeAccess().getComplexEnumLiteralDeclaration_1()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


